/*
 * Copyright (c) 2024 Zhangqi Li (@zhangqili)
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 */
#ifndef KEYCODE_H_
#define KEYCODE_H_

#include "stdint.h"

typedef uint16_t Keycode;

enum LayerControlKeycode {
  LAYER_MOMENTARY = 0x00,
  LAYER_TURN_ON = 0x01,
  LAYER_TURN_OFF = 0x02,
  LAYER_TOGGLE = 0x03,
};

#define LAYER(code,layer) (((code) << 12) | ((layer) << 8) | LAYER_CONTROL)

enum ModifierKeycode
{
    /*------------------------- HID report data -------------------------*/
    KEY_NO_MODIFIER=0,
    KEY_LEFT_CTRL = 0x01,KEY_LEFT_SHIFT = 0x02,KEY_LEFT_ALT = 0x04,KEY_LEFT_GUI = 0x08,
    KEY_RIGHT_CTRL = 0x10,KEY_RIGHT_SHIFT = 0x20,KEY_RIGHT_ALT = 0x40,KEY_RIGHT_GUI = 0x80,
    /*------------------------- HID report data -------------------------*/
};

enum KeycodeEnum {
  KEY_NO_EVENT                 = 0x00,   // Keyboard NoEvent
  KEY_ERR_OVF                  = 0x01,   // Keyboard ErrorRollOver
  KEY_POST_FAIL                = 0x02,   // Keyboard POSTFail
  KEY_ERR_UNDEF                = 0x03,   // Keyboard ErrorUndefined
  KEY_A                        = 0x04,   // Keyboard a and A
  KEY_B                        = 0x05,   // Keyboard b and B
  KEY_C                        = 0x06,   // Keyboard c and C
  KEY_D                        = 0x07,   // Keyboard d and D
  KEY_E                        = 0x08,   // Keyboard e and E
  KEY_F                        = 0x09,   // Keyboard f and F
  KEY_G                        = 0x0a,   // Keyboard g and G
  KEY_H                        = 0x0b,   // Keyboard h and H
  KEY_I                        = 0x0c,   // Keyboard i and I
  KEY_J                        = 0x0d,   // Keyboard j and J
  KEY_K                        = 0x0e,   // Keyboard k and K
  KEY_L                        = 0x0f,   // Keyboard l and L
  KEY_M                        = 0x10,   // Keyboard m and M
  KEY_N                        = 0x11,   // Keyboard n and N
  KEY_O                        = 0x12,   // Keyboard o and O
  KEY_P                        = 0x13,   // Keyboard p and P
  KEY_Q                        = 0x14,   // Keyboard q and Q
  KEY_R                        = 0x15,   // Keyboard r and R
  KEY_S                        = 0x16,   // Keyboard s and S
  KEY_T                        = 0x17,   // Keyboard t and T
  KEY_U                        = 0x18,   // Keyboard u and U
  KEY_V                        = 0x19,   // Keyboard v and V
  KEY_W                        = 0x1a,   // Keyboard w and W
  KEY_X                        = 0x1b,   // Keyboard x and X
  KEY_Y                        = 0x1c,   // Keyboard y and Y
  KEY_Z                        = 0x1d,   // Keyboard z and Z
  KEY_1                        = 0x1e,   // Keyboard 1 and !
  KEY_2                        = 0x1f,   // Keyboard 2 and @
  KEY_3                        = 0x20,   // Keyboard 3 and #
  KEY_4                        = 0x21,   // Keyboard 4 and $
  KEY_5                        = 0x22,   // Keyboard 5 and %
  KEY_6                        = 0x23,   // Keyboard 6 and ^
  KEY_7                        = 0x24,   // Keyboard 7 and &
  KEY_8                        = 0x25,   // Keyboard 8 and *
  KEY_9                        = 0x26,   // Keyboard 9 and (
  KEY_0                        = 0x27,   // Keyboard 0 and )
  KEY_ENTER                    = 0x28,   // Keyboard Return (ENTER)
  KEY_ESC                      = 0x29,   // Keyboard ESCAPE
  KEY_BACKSPACE                = 0x2a,   // Keyboard DELETE (Backspace)
  KEY_TAB                      = 0x2b,   // Keyboard Tab
  KEY_SPACEBAR                 = 0x2c,   // Keyboard Spacebar
  KEY_MINUS                    = 0x2d,   // Keyboard - and _
  KEY_EQUAL                    = 0x2e,   // Keyboard = and +
  KEY_LEFT_BRACE               = 0x2f,   // Keyboard [ and {
  KEY_RIGHT_BRACE              = 0x30,   // Keyboard ] and }
  KEY_BACKSLASH                = 0x31,   // Keyboard \ and |
  KEY_NUMBER_SIGN              = 0x32,   // Keyboard Non-US # and ~
  KEY_SEMICOLON                = 0x33,   // Keyboard ; and :
  KEY_APOSTROPHE               = 0x34,   // Keyboard ‘ and “
  KEY_GRAVE                    = 0x35,   // Keyboard Grave Accent and Tilde
  KEY_COMMA                    = 0x36,   // Keyboard , and <
  KEY_DOT                      = 0x37,
  KEY_SLASH                    = 0x38,   // Keyboard . and >
  KEY_CAPS_LOCK                = 0x39,   // Keyboard Caps Lock
  KEY_F1                       = 0x3a,   // Keyboard F1
  KEY_F2                       = 0x3b,   // Keyboard F2
  KEY_F3                       = 0x3c,   // Keyboard F3
  KEY_F4                       = 0x3d,   // Keyboard F4
  KEY_F5                       = 0x3e,   // Keyboard F5
  KEY_F6                       = 0x3f,   // Keyboard F6
  KEY_F7                       = 0x40,   // Keyboard F7
  KEY_F8                       = 0x41,   // Keyboard F8
  KEY_F9                       = 0x42,   // Keyboard F9
  KEY_F10                      = 0x43,   // Keyboard F10
  KEY_F11                      = 0x44,   // Keyboard F11
  KEY_F12                      = 0x45,   // Keyboard F12
  KEY_PRINT_SCREEN             = 0x46,   // Keyboard PrintScreen
  KEY_SCROLL_LOCK              = 0x47,   // Keyboard Scroll Lock
  KEY_PAUSE                    = 0x48,   // Keyboard Pause
  KEY_INSERT                   = 0x49,   // Keyboard Insert
  KEY_HOME                     = 0x4a,   // Keyboard Home
  KEY_PAGE_UP                  = 0x4b,   // Keyboard PageUp
  KEY_DELETE                   = 0x4c,   // Keyboard Delete Forward
  KEY_END                      = 0x4d,   // Keyboard End
  KEY_PAGE_DOWN                = 0x4e,   // Keyboard PageDown
  KEY_RIGHT_ARROW              = 0x4f,   // Keyboard RightArrow
  KEY_LEFT_ARROW               = 0x50,   // Keyboard LeftArrow
  KEY_DOWN_ARROW               = 0x51,   // Keyboard DownArrow
  KEY_UP_ARROW                 = 0x52,   // Keyboard UpArrow
  KEY_NUM_LOCK                 = 0x53,   // Keypad Num Lock and Clear
  KEYPAD_DIVIDE                = 0x54,   // Keypad /
  KEYPAD_MULTIPLY              = 0x55,   // Keypad *
  KEYPAD_MINUS                 = 0x56,   // Keypad -
  KEYPAD_PLUS                  = 0x57,   // Keypad +
  KEYPAD_ENTER                 = 0x58,   // Keypad ENTER
  KEYPAD_1                     = 0x59,   // Keypad 1 and End
  KEYPAD_2                     = 0x5a,   // Keypad 2 and Down Arrow
  KEYPAD_3                     = 0x5b,   // Keypad 3 and PageDn
  KEYPAD_4                     = 0x5c,   // Keypad 4 and Left Arrow
  KEYPAD_5                     = 0x5d,   // Keypad 5
  KEYPAD_6                     = 0x5e,   // Keypad 6 and Right Arrow
  KEYPAD_7                     = 0x5f,   // Keypad 7 and Home
  KEYPAD_8                     = 0x60,   // Keypad 8 and Up Arrow
  KEYPAD_9                     = 0x61,   // Keypad 9 and PageUp
  KEYPAD_0                     = 0x62,   // Keypad 0 and Insert
  KEYPAD_DOT                   = 0x63,   // Keypad . and Delete
  KEY_NON_US_BS                = 0x64,   // Keyboard Non-US \ and |
  KEY_APPLICATION              = 0x65,   // Keyboard Application
  KEY_POWER                    = 0x66,   // Keyboard Power
  KEY_EQUAL_PLUS               = 0x67,   // Keypad =
  KEY_F13                      = 0x68,   // Keyboard F13
  KEY_F14                      = 0x69,   // Keyboard F14
  KEY_F15                      = 0x6a,   // Keyboard F15
  KEY_F16                      = 0x6b,   // Keyboard F16
  KEY_F17                      = 0x6c,   // Keyboard F17
  KEY_F18                      = 0x6d,   // Keyboard F
  KEY_F19                      = 0x6e,   // Keyboard F19
  KEY_F20                      = 0x6f,   // Keyboard F20
  KEY_F21                      = 0x70,   // Keyboard F21
  KEY_F22                      = 0x71,   // Keyboard F22
  KEY_F23                      = 0x72,   // Keyboard F23
  KEY_F24                      = 0x73,   // Keyboard F24
  KEY_EXECUTE                  = 0x74,   // Keyboard Execute
  KEY_HELP                     = 0x75,   // Keyboard Help
  KEY_MENU                     = 0x76,   // Keyboard Menu
  KEY_SELECT                   = 0x77,   // Keyboard Select
  KEY_STOP                     = 0x78,   // Keyboard Stop
  KEY_AGAIN                    = 0x79,   // Keyboard Again
  KEY_UNDO                     = 0x7a,   // Keyboard Undo
  KEY_CUT                      = 0x7b,   // Keyboard Cut
  KEY_COPY                     = 0x7c,   // Keyboard Copy
  KEY_PASTE                    = 0x7d,   // Keyboard Paste
  KEY_FIND                     = 0x7e,   // Keyboard Find
  KEY_MUTE                     = 0x7f,   // Keyboard Mute
  KEY_VOLUME_UP                = 0x80,   // Keyboard Volume Up
  KEY_VOLUME_DOWN              = 0x81,   // Keyboard Volume Down
  KEY_LOCKING_CAPS_LOCK        = 0x82,   // Keyboard Locking Caps Lock
  KEY_LOCKING_NUM_LOCK         = 0x83,   // Keyboard Locking Num Lock
  KEY_LOCKING_SCROLL_LOCK      = 0x84,   // Keyboard Locking Scroll Lock
  KEYPAD_COMMA                 = 0x85,   // Keypad Comma
  KEY_EQUAL_SIGN               = 0x86,   // Keypad Equal Sign
  KEY_INTL1                    = 0x87,   // Keyboard International1
  KEY_INTL2                    = 0x88,   // Keyboard International2
  KEY_INTL3                    = 0x89,   // Keyboard International3
  KEY_INTL4                    = 0x8a,   // Keyboard International4
  KEY_INTL5                    = 0x8b,   // Keyboard International5
  KEY_INTL6                    = 0x8c,   // Keyboard International6
  KEY_INTL7                    = 0x8d,   // Keyboard International7
  KEY_INTL8                    = 0x8e,   // Keyboard International8
  KEY_INTL9                    = 0x8f,   // Keyboard International9
  KEY_LANG1                    = 0x90,   // Keyboard LANG1
  KEY_LANG2                    = 0x91,   // Keyboard LANG2
  KEY_LANG3                    = 0x92,   // Keyboard LANG3
  KEY_LANG4                    = 0x93,   // Keyboard LANG4
  KEY_LANG5                    = 0x94,   // Keyboard LANG5
  KEY_LANG6                    = 0x95,   // Keyboard LANG6
  KEY_LANG7                    = 0x96,   // Keyboard LANG7
  KEY_LANG8                    = 0x97,   // Keyboard LANG8
  KEY_LANG9                    = 0x98,   // Keyboard LANG9
  KEY_ALTERNATE_ERASE          = 0x99,   // Keyboard AlternateErase
  KEY_SYSREQ_ATTENTION         = 0x9a,   // Keyboard SysReq/Attention
  KEY_CANCEL                   = 0x9b,   // Keyboard Cancel
  KEY_CLEAR                    = 0x9c,   // Keyboard Clear
  KEY_PRIOR                    = 0x9d,   // Keyboard Prior
  KEY_RETURN                   = 0x9e,   // Keyboard Return
  KEY_SEPARATOR                = 0x9f,   // Keyboard Separator
  KEY_OUT                      = 0xa0,   // Keyboard Out
  KEY_OPER                     = 0xa1,   // Keyboard Oper
  KEY_CLEAR_AGAIN              = 0xa2,   // Keyboard Clear/Again
  KEY_CRSEL_PROPS              = 0xa3,   // Keyboard CrSel/Props
  KEY_EXSEL                    = 0xa4,   // Keyboard ExSel
  //Reserved b5-DF
  MOUSE_COLLECTION = 0xa5,
  LAYER_CONTROL = 0xa6,
  DYNAMIC_KEY = 0xa7,
  CONSUMER_COLLECTION = 0xa8,
  SYSTEM_COLLECTION = 0xa9,
  JOYSTICK_COLLECTION = 0xaa,
  MIDI_COLLECTION = 0xab,
  MIDI_NOTE = 0xac,
  KEY_USER = 0xFD,
  KEYBOARD_OPERATION = 0xFE,
  KEY_TRANSPARENT = 0xFF,
};

enum MouseKeycode {
  MOUSE_LBUTTON = 0x00,
  MOUSE_RBUTTON = 0x01,
  MOUSE_MBUTTON = 0x02,
  MOUSE_FORWARD = 0x03,
  MOUSE_BACK = 0x04,
  MOUSE_WHEEL_UP = 0x05,
  MOUSE_WHEEL_DOWN = 0x06,
};

enum KeyboardKeycode {
  KEYBOARD_REBOOT = 0x00,
  KEYBOARD_FACTORY_RESET = 0x01,
  KEYBOARD_SAVE = 0x02,
  KEYBOARD_BOOTLOADER = 0x03,
  KEYBOARD_DEBUG_TOGGLE = 0x04,
  KEYBOARD_RESET_TO_DEFAULT = 0x05,
  KEYBOARD_NKRO_TOGGLE = 0x06,
  KEYBOARD_CONFIG0 = 0x10,
  KEYBOARD_CONFIG1 = 0x11,
  KEYBOARD_CONFIG2 = 0x12,
  KEYBOARD_CONFIG3 = 0x13,
};

enum ConsumerKeycode
{
  // 15.5 Display Controls
  CONSUMER_SNAPSHOT        = 0x01,
  CONSUMER_BRIGHTNESS_UP   = 0x02, // https://www.usb.org/sites/default/files/hutrr41_0.pdf
  CONSUMER_BRIGHTNESS_DOWN = 0x03,
  // 15.7 Transport Controls
  CONSUMER_TRANSPORT_RECORD       = 0x04,
  CONSUMER_TRANSPORT_FAST_FORWARD = 0x05,
  CONSUMER_TRANSPORT_REWIND       = 0x06,
  CONSUMER_TRANSPORT_NEXT_TRACK   = 0x07,
  CONSUMER_TRANSPORT_PREV_TRACK   = 0x08,
  CONSUMER_TRANSPORT_STOP         = 0x09,
  CONSUMER_TRANSPORT_EJECT        = 0x0A,
  CONSUMER_TRANSPORT_RANDOM_PLAY  = 0x0B,
  CONSUMER_TRANSPORT_STOP_EJECT   = 0x0C,
  CONSUMER_TRANSPORT_PLAY_PAUSE   = 0x0D,
  // 15.9.1 Audio Controls - Volume
  CONSUMER_AUDIO_MUTE     = 0x0E,
  CONSUMER_AUDIO_VOL_UP   = 0x0F,
  CONSUMER_AUDIO_VOL_DOWN = 0x10,
  // 15.15 Application Launch Buttons
  CONSUMER_AL_CC_CONFIG       = 0x11,
  CONSUMER_AL_EMAIL           = 0x12,
  CONSUMER_AL_CALCULATOR      = 0x13,
  CONSUMER_AL_LOCAL_BROWSER   = 0x14,
  CONSUMER_AL_LOCK            = 0x15,
  CONSUMER_AL_CONTROL_PANEL   = 0x16,
  CONSUMER_AL_ASSISTANT       = 0x17,
  CONSUMER_AL_KEYBOARD_LAYOUT = 0x18,
  // 15.16 Generic GUI Application Controls
  CONSUMER_AC_NEW                         = 0x19,
  CONSUMER_AC_OPEN                        = 0x1A,
  CONSUMER_AC_CLOSE                       = 0x1B,
  CONSUMER_AC_EXIT                        = 0x1C,
  CONSUMER_AC_MAXIMIZE                    = 0x1D,
  CONSUMER_AC_MINIMIZE                    = 0x1E,
  CONSUMER_AC_SAVE                        = 0x1F,
  CONSUMER_AC_PRINT                       = 0x20,
  CONSUMER_AC_PROPERTIES                  = 0x21,
  CONSUMER_AC_UNDO                        = 0x22,
  CONSUMER_AC_COPY                        = 0x23,
  CONSUMER_AC_CUT                         = 0x24,
  CONSUMER_AC_PASTE                       = 0x25,
  CONSUMER_AC_SELECT_ALL                  = 0x26,
  CONSUMER_AC_FIND                        = 0x27,
  CONSUMER_AC_SEARCH                      = 0x28,
  CONSUMER_AC_HOME                        = 0x29,
  CONSUMER_AC_BACK                        = 0x2A,
  CONSUMER_AC_FORWARD                     = 0x2B,
  CONSUMER_AC_STOP                        = 0x2C,
  CONSUMER_AC_REFRESH                     = 0x2D,
  CONSUMER_AC_BOOKMARKS                   = 0x2E,
  CONSUMER_AC_NEXT_KEYBOARD_LAYOUT_SELECT = 0x2F,
  CONSUMER_AC_DESKTOP_SHOW_ALL_WINDOWS    = 0x30,
  CONSUMER_AC_SOFT_KEY_LEFT               = 0x31,
};

enum SystemRawKeycode
{
  SYSTEM_POWER_DOWN             = 0x81,
  SYSTEM_SLEEP                  = 0x82,
  SYSTEM_WAKE_UP                = 0x83,
  SYSTEM_RESTART                = 0x8F,
  SYSTEM_DISPLAY_TOGGLE_INT_EXT = 0xB5,
};
/* Consumer Page (0x0C)
 *
 * See https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf#page=75
 */
enum ConsumerRawKeycode
{
  // 15.5 Display Controls
  SNAPSHOT        = 0x065,
  BRIGHTNESS_UP   = 0x06F, // https://www.usb.org/sites/default/files/hutrr41_0.pdf
  BRIGHTNESS_DOWN = 0x070,
  // 15.7 Transport Controls
  TRANSPORT_RECORD       = 0x0B2,
  TRANSPORT_FAST_FORWARD = 0x0B3,
  TRANSPORT_REWIND       = 0x0B4,
  TRANSPORT_NEXT_TRACK   = 0x0B5,
  TRANSPORT_PREV_TRACK   = 0x0B6,
  TRANSPORT_STOP         = 0x0B7,
  TRANSPORT_EJECT        = 0x0B8,
  TRANSPORT_RANDOM_PLAY  = 0x0B9,
  TRANSPORT_STOP_EJECT   = 0x0CC,
  TRANSPORT_PLAY_PAUSE   = 0x0CD,
  // 15.9.1 Audio Controls - Volume
  AUDIO_MUTE     = 0x0E2,
  AUDIO_VOL_UP   = 0x0E9,
  AUDIO_VOL_DOWN = 0x0EA,
  // 15.15 Application Launch Buttons
  AL_CC_CONFIG       = 0x183,
  AL_EMAIL           = 0x18A,
  AL_CALCULATOR      = 0x192,
  AL_LOCAL_BROWSER   = 0x194,
  AL_LOCK            = 0x19E,
  AL_CONTROL_PANEL   = 0x19F,
  AL_ASSISTANT       = 0x1CB,
  AL_KEYBOARD_LAYOUT = 0x1AE,
  // 15.16 Generic GUI Application Controls
  AC_NEW                         = 0x201,
  AC_OPEN                        = 0x202,
  AC_CLOSE                       = 0x203,
  AC_EXIT                        = 0x204,
  AC_MAXIMIZE                    = 0x205,
  AC_MINIMIZE                    = 0x206,
  AC_SAVE                        = 0x207,
  AC_PRINT                       = 0x208,
  AC_PROPERTIES                  = 0x209,
  AC_UNDO                        = 0x21A,
  AC_COPY                        = 0x21B,
  AC_CUT                         = 0x21C,
  AC_PASTE                       = 0x21D,
  AC_SELECT_ALL                  = 0x21E,
  AC_FIND                        = 0x21F,
  AC_SEARCH                      = 0x221,
  AC_HOME                        = 0x223,
  AC_BACK                        = 0x224,
  AC_FORWARD                     = 0x225,
  AC_STOP                        = 0x226,
  AC_REFRESH                     = 0x227,
  AC_BOOKMARKS                   = 0x22A,
  AC_NEXT_KEYBOARD_LAYOUT_SELECT = 0x29D,
  AC_DESKTOP_SHOW_ALL_WINDOWS    = 0x29F,
  AC_SOFT_KEY_LEFT               = 0x2A0
};

enum MIDIKeycode 
{
  MIDI_ON                       = 0x00,
  MIDI_OFF                      = 0x01,
  MIDI_TOGGLE                   = 0x02,
  MIDI_NOTE_C_0                 = 0x03,
  MIDI_NOTE_C_SHARP_0           = 0x04,
  MIDI_NOTE_D_0                 = 0x05,
  MIDI_NOTE_D_SHARP_0           = 0x06,
  MIDI_NOTE_E_0                 = 0x07,
  MIDI_NOTE_F_0                 = 0x08,
  MIDI_NOTE_F_SHARP_0           = 0x09,
  MIDI_NOTE_G_0                 = 0x0A,
  MIDI_NOTE_G_SHARP_0           = 0x0B,
  MIDI_NOTE_A_0                 = 0x0C,
  MIDI_NOTE_A_SHARP_0           = 0x0D,
  MIDI_NOTE_B_0                 = 0x0E,
  MIDI_NOTE_C_1                 = 0x0F,
  MIDI_NOTE_C_SHARP_1           = 0x10,
  MIDI_NOTE_D_1                 = 0x11,
  MIDI_NOTE_D_SHARP_1           = 0x12,
  MIDI_NOTE_E_1                 = 0x13,
  MIDI_NOTE_F_1                 = 0x14,
  MIDI_NOTE_F_SHARP_1           = 0x15,
  MIDI_NOTE_G_1                 = 0x16,
  MIDI_NOTE_G_SHARP_1           = 0x17,
  MIDI_NOTE_A_1                 = 0x18,
  MIDI_NOTE_A_SHARP_1           = 0x19,
  MIDI_NOTE_B_1                 = 0x1A,
  MIDI_NOTE_C_2                 = 0x1B,
  MIDI_NOTE_C_SHARP_2           = 0x1C,
  MIDI_NOTE_D_2                 = 0x1D,
  MIDI_NOTE_D_SHARP_2           = 0x1E,
  MIDI_NOTE_E_2                 = 0x1F,
  MIDI_NOTE_F_2                 = 0x20,
  MIDI_NOTE_F_SHARP_2           = 0x21,
  MIDI_NOTE_G_2                 = 0x22,
  MIDI_NOTE_G_SHARP_2           = 0x23,
  MIDI_NOTE_A_2                 = 0x24,
  MIDI_NOTE_A_SHARP_2           = 0x25,
  MIDI_NOTE_B_2                 = 0x26,
  MIDI_NOTE_C_3                 = 0x27,
  MIDI_NOTE_C_SHARP_3           = 0x28,
  MIDI_NOTE_D_3                 = 0x29,
  MIDI_NOTE_D_SHARP_3           = 0x2A,
  MIDI_NOTE_E_3                 = 0x2B,
  MIDI_NOTE_F_3                 = 0x2C,
  MIDI_NOTE_F_SHARP_3           = 0x2D,
  MIDI_NOTE_G_3                 = 0x2E,
  MIDI_NOTE_G_SHARP_3           = 0x2F,
  MIDI_NOTE_A_3                 = 0x30,
  MIDI_NOTE_A_SHARP_3           = 0x31,
  MIDI_NOTE_B_3                 = 0x32,
  MIDI_NOTE_C_4                 = 0x33,
  MIDI_NOTE_C_SHARP_4           = 0x34,
  MIDI_NOTE_D_4                 = 0x35,
  MIDI_NOTE_D_SHARP_4           = 0x36,
  MIDI_NOTE_E_4                 = 0x37,
  MIDI_NOTE_F_4                 = 0x38,
  MIDI_NOTE_F_SHARP_4           = 0x39,
  MIDI_NOTE_G_4                 = 0x3A,
  MIDI_NOTE_G_SHARP_4           = 0x3B,
  MIDI_NOTE_A_4                 = 0x3C,
  MIDI_NOTE_A_SHARP_4           = 0x3D,
  MIDI_NOTE_B_4                 = 0x3E,
  MIDI_NOTE_C_5                 = 0x3F,
  MIDI_NOTE_C_SHARP_5           = 0x40,
  MIDI_NOTE_D_5                 = 0x41,
  MIDI_NOTE_D_SHARP_5           = 0x42,
  MIDI_NOTE_E_5                 = 0x43,
  MIDI_NOTE_F_5                 = 0x44,
  MIDI_NOTE_F_SHARP_5           = 0x45,
  MIDI_NOTE_G_5                 = 0x46,
  MIDI_NOTE_G_SHARP_5           = 0x47,
  MIDI_NOTE_A_5                 = 0x48,
  MIDI_NOTE_A_SHARP_5           = 0x49,
  MIDI_NOTE_B_5                 = 0x4A,
  MIDI_OCTAVE_N2                = 0x4B,
  MIDI_OCTAVE_N1                = 0x4C,
  MIDI_OCTAVE_0                 = 0x4D,
  MIDI_OCTAVE_1                 = 0x4E,
  MIDI_OCTAVE_2                 = 0x4F,
  MIDI_OCTAVE_3                 = 0x50,
  MIDI_OCTAVE_4                 = 0x51,
  MIDI_OCTAVE_5                 = 0x52,
  MIDI_OCTAVE_6                 = 0x53,
  MIDI_OCTAVE_7                 = 0x54,
  MIDI_OCTAVE_DOWN              = 0x55,
  MIDI_OCTAVE_UP                = 0x56,
  MIDI_TRANSPOSE_N6             = 0x57,
  MIDI_TRANSPOSE_N5             = 0x58,
  MIDI_TRANSPOSE_N4             = 0x59,
  MIDI_TRANSPOSE_N3             = 0x5A,
  MIDI_TRANSPOSE_N2             = 0x5B,
  MIDI_TRANSPOSE_N1             = 0x5C,
  MIDI_TRANSPOSE_0              = 0x5D,
  MIDI_TRANSPOSE_1              = 0x5E,
  MIDI_TRANSPOSE_2              = 0x5F,
  MIDI_TRANSPOSE_3              = 0x60,
  MIDI_TRANSPOSE_4              = 0x61,
  MIDI_TRANSPOSE_5              = 0x62,
  MIDI_TRANSPOSE_6              = 0x63,
  MIDI_TRANSPOSE_DOWN           = 0x64,
  MIDI_TRANSPOSE_UP             = 0x65,
  MIDI_VELOCITY_0               = 0x66,
  MIDI_VELOCITY_1               = 0x67,
  MIDI_VELOCITY_2               = 0x68,
  MIDI_VELOCITY_3               = 0x69,
  MIDI_VELOCITY_4               = 0x6A,
  MIDI_VELOCITY_5               = 0x6B,
  MIDI_VELOCITY_6               = 0x6C,
  MIDI_VELOCITY_7               = 0x6D,
  MIDI_VELOCITY_8               = 0x6E,
  MIDI_VELOCITY_9               = 0x6F,
  MIDI_VELOCITY_10              = 0x70,
  MIDI_VELOCITY_DOWN            = 0x71,
  MIDI_VELOCITY_UP              = 0x72,
  MIDI_CHANNEL_1                = 0x73,
  MIDI_CHANNEL_2                = 0x74,
  MIDI_CHANNEL_3                = 0x75,
  MIDI_CHANNEL_4                = 0x76,
  MIDI_CHANNEL_5                = 0x77,
  MIDI_CHANNEL_6                = 0x78,
  MIDI_CHANNEL_7                = 0x79,
  MIDI_CHANNEL_8                = 0x7A,
  MIDI_CHANNEL_9                = 0x7B,
  MIDI_CHANNEL_10               = 0x7C,
  MIDI_CHANNEL_11               = 0x7D,
  MIDI_CHANNEL_12               = 0x7E,
  MIDI_CHANNEL_13               = 0x7F,
  MIDI_CHANNEL_14               = 0x80,
  MIDI_CHANNEL_15               = 0x81,
  MIDI_CHANNEL_16               = 0x82,
  MIDI_CHANNEL_DOWN             = 0x83,
  MIDI_CHANNEL_UP               = 0x84,
  MIDI_ALL_NOTES_OFF            = 0x85,
  MIDI_SUSTAIN                  = 0x86,
  MIDI_PORTAMENTO               = 0x87,
  MIDI_SOSTENUTO                = 0x88,
  MIDI_SOFT                     = 0x89,
  MIDI_LEGATO                   = 0x8A,
  MIDI_MODULATION               = 0x8B,
  MIDI_MODULATION_SPEED_DOWN    = 0x8C,
  MIDI_MODULATION_SPEED_UP      = 0x8D,
  MIDI_PITCH_BEND_DOWN          = 0x8E,
  MIDI_PITCH_BEND_UP            = 0x8F,
};

enum MIDINoteKeycode 
{
  MIDI_DIRECT_NOTE_C_0       ,
  MIDI_DIRECT_NOTE_C_SHARP_0 ,
  MIDI_DIRECT_NOTE_D_0       ,
  MIDI_DIRECT_NOTE_D_SHARP_0 ,
  MIDI_DIRECT_NOTE_E_0       ,
  MIDI_DIRECT_NOTE_F_0       ,
  MIDI_DIRECT_NOTE_F_SHARP_0 ,
  MIDI_DIRECT_NOTE_G_0       ,
  MIDI_DIRECT_NOTE_G_SHARP_0 ,
  MIDI_DIRECT_NOTE_A_0       ,
  MIDI_DIRECT_NOTE_A_SHARP_0 ,
  MIDI_DIRECT_NOTE_B_0       ,
  MIDI_DIRECT_NOTE_C_1       ,
  MIDI_DIRECT_NOTE_C_SHARP_1 ,
  MIDI_DIRECT_NOTE_D_1       ,
  MIDI_DIRECT_NOTE_D_SHARP_1 ,
  MIDI_DIRECT_NOTE_E_1       ,
  MIDI_DIRECT_NOTE_F_1       ,
  MIDI_DIRECT_NOTE_F_SHARP_1 ,
  MIDI_DIRECT_NOTE_G_1       ,
  MIDI_DIRECT_NOTE_G_SHARP_1 ,
  MIDI_DIRECT_NOTE_A_1       ,
  MIDI_DIRECT_NOTE_A_SHARP_1 ,
  MIDI_DIRECT_NOTE_B_1       ,
  MIDI_DIRECT_NOTE_C_2       ,
  MIDI_DIRECT_NOTE_C_SHARP_2 ,
  MIDI_DIRECT_NOTE_D_2       ,
  MIDI_DIRECT_NOTE_D_SHARP_2 ,
  MIDI_DIRECT_NOTE_E_2       ,
  MIDI_DIRECT_NOTE_F_2       ,
  MIDI_DIRECT_NOTE_F_SHARP_2 ,
  MIDI_DIRECT_NOTE_G_2       ,
  MIDI_DIRECT_NOTE_G_SHARP_2 ,
  MIDI_DIRECT_NOTE_A_2       ,
  MIDI_DIRECT_NOTE_A_SHARP_2 ,
  MIDI_DIRECT_NOTE_B_2       ,
  MIDI_DIRECT_NOTE_C_3       ,
  MIDI_DIRECT_NOTE_C_SHARP_3 ,
  MIDI_DIRECT_NOTE_D_3       ,
  MIDI_DIRECT_NOTE_D_SHARP_3 ,
  MIDI_DIRECT_NOTE_E_3       ,
  MIDI_DIRECT_NOTE_F_3       ,
  MIDI_DIRECT_NOTE_F_SHARP_3 ,
  MIDI_DIRECT_NOTE_G_3       ,
  MIDI_DIRECT_NOTE_G_SHARP_3 ,
  MIDI_DIRECT_NOTE_A_3       ,
  MIDI_DIRECT_NOTE_A_SHARP_3 ,
  MIDI_DIRECT_NOTE_B_3       ,
  MIDI_DIRECT_NOTE_C_4       ,
  MIDI_DIRECT_NOTE_C_SHARP_4 ,
  MIDI_DIRECT_NOTE_D_4       ,
  MIDI_DIRECT_NOTE_D_SHARP_4 ,
  MIDI_DIRECT_NOTE_E_4       ,
  MIDI_DIRECT_NOTE_F_4       ,
  MIDI_DIRECT_NOTE_F_SHARP_4 ,
  MIDI_DIRECT_NOTE_G_4       ,
  MIDI_DIRECT_NOTE_G_SHARP_4 ,
  MIDI_DIRECT_NOTE_A_4       ,
  MIDI_DIRECT_NOTE_A_SHARP_4 ,
  MIDI_DIRECT_NOTE_B_4       ,
  MIDI_DIRECT_NOTE_C_5       ,
  MIDI_DIRECT_NOTE_C_SHARP_5 ,
  MIDI_DIRECT_NOTE_D_5       ,
  MIDI_DIRECT_NOTE_D_SHARP_5 ,
  MIDI_DIRECT_NOTE_E_5       ,
  MIDI_DIRECT_NOTE_F_5       ,
  MIDI_DIRECT_NOTE_F_SHARP_5 ,
  MIDI_DIRECT_NOTE_G_5       ,
  MIDI_DIRECT_NOTE_G_SHARP_5 ,
  MIDI_DIRECT_NOTE_A_5       ,
  MIDI_DIRECT_NOTE_A_SHARP_5 ,
  MIDI_DIRECT_NOTE_B_5       ,
  MIDI_DIRECT_NOTE_C_6       ,
  MIDI_DIRECT_NOTE_C_SHARP_6 ,
  MIDI_DIRECT_NOTE_D_6       ,
  MIDI_DIRECT_NOTE_D_SHARP_6 ,
  MIDI_DIRECT_NOTE_E_6       ,
  MIDI_DIRECT_NOTE_F_6       ,
  MIDI_DIRECT_NOTE_F_SHARP_6 ,
  MIDI_DIRECT_NOTE_G_6       ,
  MIDI_DIRECT_NOTE_G_SHARP_6 ,
  MIDI_DIRECT_NOTE_A_6       ,
  MIDI_DIRECT_NOTE_A_SHARP_6 ,
  MIDI_DIRECT_NOTE_B_6       ,
  MIDI_DIRECT_NOTE_C_7       ,
  MIDI_DIRECT_NOTE_C_SHARP_7 ,
  MIDI_DIRECT_NOTE_D_7       ,
  MIDI_DIRECT_NOTE_D_SHARP_7 ,
  MIDI_DIRECT_NOTE_E_7       ,
  MIDI_DIRECT_NOTE_F_7       ,
  MIDI_DIRECT_NOTE_F_SHARP_7 ,
  MIDI_DIRECT_NOTE_G_7       ,
  MIDI_DIRECT_NOTE_G_SHARP_7 ,
  MIDI_DIRECT_NOTE_A_7       ,
  MIDI_DIRECT_NOTE_A_SHARP_7 ,
  MIDI_DIRECT_NOTE_B_7       ,
  MIDI_DIRECT_NOTE_C_8       ,
  MIDI_DIRECT_NOTE_C_SHARP_8 ,
  MIDI_DIRECT_NOTE_D_8       ,
  MIDI_DIRECT_NOTE_D_SHARP_8 ,
  MIDI_DIRECT_NOTE_E_8       ,
  MIDI_DIRECT_NOTE_F_8       ,
  MIDI_DIRECT_NOTE_F_SHARP_8 ,
  MIDI_DIRECT_NOTE_G_8       ,
  MIDI_DIRECT_NOTE_G_SHARP_8 ,
  MIDI_DIRECT_NOTE_A_8       ,
  MIDI_DIRECT_NOTE_A_SHARP_8 ,
  MIDI_DIRECT_NOTE_B_8       ,
  MIDI_DIRECT_NOTE_C_9       ,
  MIDI_DIRECT_NOTE_C_SHARP_9 ,
  MIDI_DIRECT_NOTE_D_9       ,
  MIDI_DIRECT_NOTE_D_SHARP_9 ,
  MIDI_DIRECT_NOTE_E_9       ,
  MIDI_DIRECT_NOTE_F_9       ,
  MIDI_DIRECT_NOTE_F_SHARP_9 ,
  MIDI_DIRECT_NOTE_G_9       ,
  MIDI_DIRECT_NOTE_G_SHARP_9 ,
  MIDI_DIRECT_NOTE_A_9       ,
  MIDI_DIRECT_NOTE_A_SHARP_9 ,
  MIDI_DIRECT_NOTE_B_9       ,
  MIDI_DIRECT_NOTE_C_10      ,
  MIDI_DIRECT_NOTE_C_SHARP_10,
  MIDI_DIRECT_NOTE_D_10      ,
  MIDI_DIRECT_NOTE_D_SHARP_10,
  MIDI_DIRECT_NOTE_E_10      ,
  MIDI_DIRECT_NOTE_F_10      ,
  MIDI_DIRECT_NOTE_F_SHARP_10,
  MIDI_DIRECT_NOTE_G_10      ,
};


static inline uint16_t CONSUMER_KEYCODE_TO_RAWCODE(uint8_t key) {
  switch (key) {
  case CONSUMER_AUDIO_MUTE:
    return AUDIO_MUTE;
  case CONSUMER_AUDIO_VOL_UP:
    return AUDIO_VOL_UP;
  case CONSUMER_AUDIO_VOL_DOWN:
    return AUDIO_VOL_DOWN;
  case CONSUMER_TRANSPORT_NEXT_TRACK:
    return TRANSPORT_NEXT_TRACK;
  case CONSUMER_TRANSPORT_PREV_TRACK:
    return TRANSPORT_PREV_TRACK;
  case CONSUMER_TRANSPORT_FAST_FORWARD:
    return TRANSPORT_FAST_FORWARD;
  case CONSUMER_TRANSPORT_REWIND:
    return TRANSPORT_REWIND;
  case CONSUMER_TRANSPORT_STOP:
    return TRANSPORT_STOP;
  case CONSUMER_TRANSPORT_STOP_EJECT:
    return TRANSPORT_STOP_EJECT;
  case CONSUMER_TRANSPORT_PLAY_PAUSE:
    return TRANSPORT_PLAY_PAUSE;
  case CONSUMER_AL_CC_CONFIG:
    return AL_CC_CONFIG;
  case CONSUMER_AL_EMAIL:
    return AL_EMAIL;
  case CONSUMER_AL_CALCULATOR:
    return AL_CALCULATOR;
  case CONSUMER_AL_LOCAL_BROWSER:
    return AL_LOCAL_BROWSER;
  case CONSUMER_AL_CONTROL_PANEL:
    return AL_CONTROL_PANEL;
  case CONSUMER_AL_ASSISTANT:
    return AL_ASSISTANT;
  case CONSUMER_AC_SEARCH:
    return AC_SEARCH;
  case CONSUMER_AC_HOME:
    return AC_HOME;
  case CONSUMER_AC_BACK:
    return AC_BACK;
  case CONSUMER_AC_FORWARD:
    return AC_FORWARD;
  case CONSUMER_AC_STOP:
    return AC_STOP;
  case CONSUMER_AC_REFRESH:
    return AC_REFRESH;
  case CONSUMER_BRIGHTNESS_UP:
    return BRIGHTNESS_UP;
  case CONSUMER_BRIGHTNESS_DOWN:
    return BRIGHTNESS_DOWN;
  case CONSUMER_AC_BOOKMARKS:
    return AC_BOOKMARKS;
  case CONSUMER_AC_DESKTOP_SHOW_ALL_WINDOWS:
    return AC_DESKTOP_SHOW_ALL_WINDOWS;
  case CONSUMER_AC_SOFT_KEY_LEFT:
    return AC_SOFT_KEY_LEFT;
  default:
    return key;
  }
}

// Copyright 2025 QMK
// SPDX-License-Identifier: GPL-2.0-or-later
enum qk_keycode_alias {
  // Keycodes
  KC_NO = KEY_NO_EVENT,
  KC_TRANSPARENT = KEY_TRANSPARENT,
  KC_A = KEY_A,
  KC_B = KEY_B,
  KC_C = KEY_C,
  KC_D = KEY_D,
  KC_E = KEY_E,
  KC_F = KEY_F,
  KC_G = KEY_G,
  KC_H = KEY_H,
  KC_I = KEY_I,
  KC_J = KEY_J,
  KC_K = KEY_K,
  KC_L = KEY_L,
  KC_M = KEY_M,
  KC_N = KEY_N,
  KC_O = KEY_O,
  KC_P = KEY_P,
  KC_Q = KEY_Q,
  KC_R = KEY_R,
  KC_S = KEY_S,
  KC_T = KEY_T,
  KC_U = KEY_U,
  KC_V = KEY_V,
  KC_W = KEY_W,
  KC_X = KEY_X,
  KC_Y = KEY_Y,
  KC_Z = KEY_Z,
  KC_1 = KEY_1,
  KC_2 = KEY_2,
  KC_3 = KEY_3,
  KC_4 = KEY_4,
  KC_5 = KEY_5,
  KC_6 = KEY_6,
  KC_7 = KEY_7,
  KC_8 = KEY_8,
  KC_9 = KEY_9,
  KC_0 = KEY_0,
  KC_ENTER = KEY_ENTER,
  KC_ESCAPE = KEY_ESC,
  KC_BACKSPACE = KEY_BACKSPACE,
  KC_TAB = KEY_TAB,
  KC_SPACE = KEY_SPACEBAR,
  KC_MINUS = KEY_MINUS,
  KC_EQUAL = KEY_EQUAL,
  KC_LEFT_BRACKET = KEY_LEFT_BRACE,
  KC_RIGHT_BRACKET = KEY_RIGHT_BRACE,
  KC_BACKSLASH = KEY_BACKSLASH,
  KC_NONUS_HASH = KEY_NUMBER_SIGN,
  KC_SEMICOLON = KEY_SEMICOLON,
  KC_QUOTE = KEY_APOSTROPHE,
  KC_GRAVE = KEY_GRAVE,
  KC_COMMA = KEY_COMMA,
  KC_DOT = KEY_DOT,
  KC_SLASH = KEY_SLASH,
  KC_CAPS_LOCK = KEY_CAPS_LOCK,
  KC_F1 = KEY_F1,
  KC_F2 = KEY_F2,
  KC_F3 = KEY_F3,
  KC_F4 = KEY_F4,
  KC_F5 = KEY_F5,
  KC_F6 = KEY_F6,
  KC_F7 = KEY_F7,
  KC_F8 = KEY_F8,
  KC_F9 = KEY_F9,
  KC_F10 = KEY_F10,
  KC_F11 = KEY_F11,
  KC_F12 = KEY_F12,
  KC_PRINT_SCREEN = KEY_PRINT_SCREEN,
  KC_SCROLL_LOCK = KEY_SCROLL_LOCK,
  KC_PAUSE = KEY_PAUSE,
  KC_INSERT = KEY_INSERT,
  KC_HOME = KEY_HOME,
  KC_PAGE_UP = KEY_PAGE_UP,
  KC_DELETE = KEY_DELETE,
  KC_END = KEY_END,
  KC_PAGE_DOWN = KEY_PAGE_DOWN,
  KC_RIGHT = KEY_RIGHT_ARROW,
  KC_LEFT = KEY_LEFT_ARROW,
  KC_DOWN = KEY_DOWN_ARROW,
  KC_UP = KEY_UP_ARROW,
  KC_NUM_LOCK = KEY_NUM_LOCK,
  KC_KP_SLASH = KEYPAD_DIVIDE,
  KC_KP_ASTERISK = KEYPAD_MULTIPLY,
  KC_KP_MINUS = KEYPAD_MINUS,
  KC_KP_PLUS = KEYPAD_PLUS,
  KC_KP_ENTER = KEYPAD_ENTER,
  KC_KP_1 = KEYPAD_1,
  KC_KP_2 = KEYPAD_2,
  KC_KP_3 = KEYPAD_3,
  KC_KP_4 = KEYPAD_4,
  KC_KP_5 = KEYPAD_5,
  KC_KP_6 = KEYPAD_6,
  KC_KP_7 = KEYPAD_7,
  KC_KP_8 = KEYPAD_8,
  KC_KP_9 = KEYPAD_9,
  KC_KP_0 = KEYPAD_0,
  KC_KP_DOT = KEYPAD_DOT,
  KC_NONUS_BACKSLASH = KEY_NON_US_BS,
  KC_APPLICATION = KEY_APPLICATION,
  KC_KB_POWER = KEY_POWER,
  KC_KP_EQUAL = KEY_EQUAL_PLUS,
  KC_F13 = KEY_F13,
  KC_F14 = KEY_F14,
  KC_F15 = KEY_F15,
  KC_F16 = KEY_F16,
  KC_F17 = KEY_F17,
  KC_F18 = KEY_F18,
  KC_F19 = KEY_F19,
  KC_F20 = KEY_F20,
  KC_F21 = KEY_F21,
  KC_F22 = KEY_F22,
  KC_F23 = KEY_F23,
  KC_F24 = KEY_F24,
  KC_EXECUTE = KEY_EXECUTE,
  KC_HELP = KEY_HELP,
  KC_MENU = KEY_MENU,
  KC_SELECT = KEY_SELECT,
  KC_STOP = KEY_STOP,
  KC_AGAIN = KEY_AGAIN,
  KC_UNDO = KEY_UNDO,
  KC_CUT = KEY_CUT,
  KC_COPY = KEY_COPY,
  KC_PASTE = KEY_PASTE,
  KC_FIND = KEY_FIND,
  KC_KB_MUTE = KEY_MUTE,
  KC_KB_VOLUME_UP = KEY_VOLUME_UP,
  KC_KB_VOLUME_DOWN = KEY_VOLUME_DOWN,
  KC_LOCKING_CAPS_LOCK = KEY_LOCKING_CAPS_LOCK,
  KC_LOCKING_NUM_LOCK = KEY_LOCKING_NUM_LOCK,
  KC_LOCKING_SCROLL_LOCK = KEY_LOCKING_SCROLL_LOCK,
  KC_KP_COMMA = KEYPAD_COMMA,
  KC_KP_EQUAL_AS400 = KEY_EQUAL_SIGN,
  KC_INTERNATIONAL_1 = KEY_INTL1,
  KC_INTERNATIONAL_2 = KEY_INTL2,
  KC_INTERNATIONAL_3 = KEY_INTL3,
  KC_INTERNATIONAL_4 = KEY_INTL4,
  KC_INTERNATIONAL_5 = KEY_INTL5,
  KC_INTERNATIONAL_6 = KEY_INTL6,
  KC_INTERNATIONAL_7 = KEY_INTL7,
  KC_INTERNATIONAL_8 = KEY_INTL8,
  KC_INTERNATIONAL_9 = KEY_INTL9,
  KC_LANGUAGE_1 = KEY_LANG1,
  KC_LANGUAGE_2 = KEY_LANG2,
  KC_LANGUAGE_3 = KEY_LANG3,
  KC_LANGUAGE_4 = KEY_LANG4,
  KC_LANGUAGE_5 = KEY_LANG5,
  KC_LANGUAGE_6 = KEY_LANG6,
  KC_LANGUAGE_7 = KEY_LANG7,
  KC_LANGUAGE_8 = KEY_LANG8,
  KC_LANGUAGE_9 = KEY_LANG9,
  KC_ALTERNATE_ERASE = KEY_ALTERNATE_ERASE,
  KC_SYSTEM_REQUEST = KEY_SYSREQ_ATTENTION,
  KC_CANCEL = KEY_CANCEL,
  KC_CLEAR = KEY_CLEAR,
  KC_PRIOR = KEY_PRIOR,
  KC_RETURN = KEY_RETURN,
  KC_SEPARATOR = KEY_SEPARATOR,
  KC_OUT = KEY_OUT,
  KC_OPER = KEY_OPER,
  KC_CLEAR_AGAIN = KEY_CLEAR_AGAIN,
  KC_CRSEL = KEY_CRSEL_PROPS,
  KC_EXSEL = KEY_EXSEL,
  KC_SYSTEM_POWER = (SYSTEM_POWER_DOWN << 8) | SYSTEM_COLLECTION,
  KC_SYSTEM_SLEEP = (SYSTEM_SLEEP << 8) | SYSTEM_COLLECTION,
  KC_SYSTEM_WAKE = (SYSTEM_WAKE_UP << 8) | SYSTEM_COLLECTION,
  KC_AUDIO_MUTE = (CONSUMER_AUDIO_MUTE << 8) | CONSUMER_COLLECTION,
  KC_AUDIO_VOL_UP = (CONSUMER_AUDIO_VOL_UP << 8) | CONSUMER_COLLECTION,
  KC_AUDIO_VOL_DOWN = (CONSUMER_AUDIO_VOL_DOWN << 8) | CONSUMER_COLLECTION,
  KC_MEDIA_NEXT_TRACK = (CONSUMER_TRANSPORT_NEXT_TRACK << 8) | CONSUMER_COLLECTION,
  KC_MEDIA_PREV_TRACK = (CONSUMER_TRANSPORT_PREV_TRACK << 8) | CONSUMER_COLLECTION,
  KC_MEDIA_STOP = (CONSUMER_TRANSPORT_STOP << 8) | CONSUMER_COLLECTION,
  KC_MEDIA_PLAY_PAUSE = (CONSUMER_TRANSPORT_PLAY_PAUSE << 8) | CONSUMER_COLLECTION,
  KC_MEDIA_SELECT = (CONSUMER_AL_CC_CONFIG << 8) | CONSUMER_COLLECTION,
  KC_MEDIA_EJECT = (CONSUMER_TRANSPORT_STOP_EJECT << 8) | CONSUMER_COLLECTION,
  KC_MAIL = (CONSUMER_AL_EMAIL << 8) | CONSUMER_COLLECTION,
  KC_CALCULATOR = (CONSUMER_AL_CALCULATOR << 8) | CONSUMER_COLLECTION,
  KC_MY_COMPUTER = (CONSUMER_AL_LOCAL_BROWSER << 8) | CONSUMER_COLLECTION,
  KC_WWW_SEARCH = (CONSUMER_AC_SEARCH << 8) | CONSUMER_COLLECTION,
  KC_WWW_HOME = (CONSUMER_AC_HOME << 8) | CONSUMER_COLLECTION,
  KC_WWW_BACK = (CONSUMER_AC_BACK << 8) | CONSUMER_COLLECTION,
  KC_WWW_FORWARD = (CONSUMER_AC_FORWARD << 8) | CONSUMER_COLLECTION,
  KC_WWW_STOP = (CONSUMER_AC_STOP << 8) | CONSUMER_COLLECTION,
  KC_WWW_REFRESH = (CONSUMER_AC_REFRESH << 8) | CONSUMER_COLLECTION,
  KC_WWW_FAVORITES = (CONSUMER_AC_BOOKMARKS << 8) | CONSUMER_COLLECTION,
  KC_MEDIA_FAST_FORWARD = (CONSUMER_TRANSPORT_FAST_FORWARD << 8) | CONSUMER_COLLECTION,
  KC_MEDIA_REWIND = (CONSUMER_TRANSPORT_REWIND << 8) | CONSUMER_COLLECTION,
  KC_BRIGHTNESS_UP = (CONSUMER_BRIGHTNESS_UP << 8) | CONSUMER_COLLECTION,
  KC_BRIGHTNESS_DOWN = (CONSUMER_BRIGHTNESS_DOWN << 8) | CONSUMER_COLLECTION,
  KC_CONTROL_PANEL = (CONSUMER_AL_CONTROL_PANEL << 8) | CONSUMER_COLLECTION,
  KC_ASSISTANT = (CONSUMER_AL_ASSISTANT << 8) | CONSUMER_COLLECTION,
  KC_MISSION_CONTROL = (CONSUMER_AC_DESKTOP_SHOW_ALL_WINDOWS << 8) | CONSUMER_COLLECTION,
  KC_LAUNCHPAD = (CONSUMER_AC_SOFT_KEY_LEFT << 8) | CONSUMER_COLLECTION,
  QK_MOUSE_CURSOR_UP = KEY_NO_EVENT,
  QK_MOUSE_CURSOR_DOWN = KEY_NO_EVENT,
  QK_MOUSE_CURSOR_LEFT = KEY_NO_EVENT,
  QK_MOUSE_CURSOR_RIGHT = KEY_NO_EVENT,
  QK_MOUSE_BUTTON_1 = (MOUSE_LBUTTON << 8 ) | MOUSE_COLLECTION,
  QK_MOUSE_BUTTON_2 = (MOUSE_RBUTTON << 8 ) | MOUSE_COLLECTION,
  QK_MOUSE_BUTTON_3 = (MOUSE_MBUTTON << 8 ) | MOUSE_COLLECTION,
  QK_MOUSE_BUTTON_4 = (MOUSE_FORWARD << 8 ) | MOUSE_COLLECTION,
  QK_MOUSE_BUTTON_5 = (MOUSE_BACK << 8 ) | MOUSE_COLLECTION,
  QK_MOUSE_BUTTON_6 = KEY_NO_EVENT,
  QK_MOUSE_BUTTON_7 = KEY_NO_EVENT,
  QK_MOUSE_BUTTON_8 = KEY_NO_EVENT,
  QK_MOUSE_WHEEL_UP = (MOUSE_WHEEL_UP << 8 ) | MOUSE_COLLECTION,
  QK_MOUSE_WHEEL_DOWN = (MOUSE_WHEEL_DOWN << 8 ) | MOUSE_COLLECTION,
  QK_MOUSE_WHEEL_LEFT = KEY_NO_EVENT,
  QK_MOUSE_WHEEL_RIGHT = KEY_NO_EVENT,
  QK_MOUSE_ACCELERATION_0 = KEY_NO_EVENT,
  QK_MOUSE_ACCELERATION_1 = KEY_NO_EVENT,
  QK_MOUSE_ACCELERATION_2 = KEY_NO_EVENT,
  KC_LEFT_CTRL = KEY_LEFT_CTRL << 8,
  KC_LEFT_SHIFT = KEY_LEFT_SHIFT << 8,
  KC_LEFT_ALT = KEY_LEFT_ALT << 8,
  KC_LEFT_GUI = KEY_LEFT_GUI << 8,
  KC_RIGHT_CTRL = KEY_RIGHT_CTRL << 8,
  KC_RIGHT_SHIFT = KEY_RIGHT_SHIFT << 8,
  KC_RIGHT_ALT = KEY_RIGHT_ALT << 8,
  KC_RIGHT_GUI = KEY_RIGHT_GUI << 8,
  QK_SWAP_HANDS_TOGGLE = KEY_NO_EVENT,
  QK_SWAP_HANDS_TAP_TOGGLE = KEY_NO_EVENT,
  QK_SWAP_HANDS_MOMENTARY_ON = KEY_NO_EVENT,
  QK_SWAP_HANDS_MOMENTARY_OFF = KEY_NO_EVENT,
  QK_SWAP_HANDS_OFF = KEY_NO_EVENT,
  QK_SWAP_HANDS_ON = KEY_NO_EVENT,
  QK_SWAP_HANDS_ONE_SHOT = KEY_NO_EVENT,
  QK_MAGIC_SWAP_CONTROL_CAPS_LOCK = KEY_NO_EVENT,
  QK_MAGIC_UNSWAP_CONTROL_CAPS_LOCK = KEY_NO_EVENT,
  QK_MAGIC_TOGGLE_CONTROL_CAPS_LOCK = KEY_NO_EVENT,
  QK_MAGIC_CAPS_LOCK_AS_CONTROL_OFF = KEY_NO_EVENT,
  QK_MAGIC_CAPS_LOCK_AS_CONTROL_ON = KEY_NO_EVENT,
  QK_MAGIC_SWAP_LALT_LGUI = KEY_NO_EVENT,
  QK_MAGIC_UNSWAP_LALT_LGUI = KEY_NO_EVENT,
  QK_MAGIC_SWAP_RALT_RGUI = KEY_NO_EVENT,
  QK_MAGIC_UNSWAP_RALT_RGUI = KEY_NO_EVENT,
  QK_MAGIC_GUI_ON = KEY_NO_EVENT,
  QK_MAGIC_GUI_OFF = KEY_NO_EVENT,
  QK_MAGIC_TOGGLE_GUI = KEY_NO_EVENT,
  QK_MAGIC_SWAP_GRAVE_ESC = KEY_NO_EVENT,
  QK_MAGIC_UNSWAP_GRAVE_ESC = KEY_NO_EVENT,
  QK_MAGIC_SWAP_BACKSLASH_BACKSPACE = KEY_NO_EVENT,
  QK_MAGIC_UNSWAP_BACKSLASH_BACKSPACE = KEY_NO_EVENT,
  QK_MAGIC_TOGGLE_BACKSLASH_BACKSPACE = KEY_NO_EVENT,
  QK_MAGIC_NKRO_ON = KEY_NO_EVENT,
  QK_MAGIC_NKRO_OFF = KEY_NO_EVENT,
  QK_MAGIC_TOGGLE_NKRO = KEY_NO_EVENT,
  QK_MAGIC_SWAP_ALT_GUI = KEY_NO_EVENT,
  QK_MAGIC_UNSWAP_ALT_GUI = KEY_NO_EVENT,
  QK_MAGIC_TOGGLE_ALT_GUI = KEY_NO_EVENT,
  QK_MAGIC_SWAP_LCTL_LGUI = KEY_NO_EVENT,
  QK_MAGIC_UNSWAP_LCTL_LGUI = KEY_NO_EVENT,
  QK_MAGIC_SWAP_RCTL_RGUI = KEY_NO_EVENT,
  QK_MAGIC_UNSWAP_RCTL_RGUI = KEY_NO_EVENT,
  QK_MAGIC_SWAP_CTL_GUI = KEY_NO_EVENT,
  QK_MAGIC_UNSWAP_CTL_GUI = KEY_NO_EVENT,
  QK_MAGIC_TOGGLE_CTL_GUI = KEY_NO_EVENT,
  QK_MAGIC_EE_HANDS_LEFT = KEY_NO_EVENT,
  QK_MAGIC_EE_HANDS_RIGHT = KEY_NO_EVENT,
  QK_MAGIC_SWAP_ESCAPE_CAPS_LOCK = KEY_NO_EVENT,
  QK_MAGIC_UNSWAP_ESCAPE_CAPS_LOCK = KEY_NO_EVENT,
  QK_MAGIC_TOGGLE_ESCAPE_CAPS_LOCK = KEY_NO_EVENT,
  QK_MIDI_ON = (MIDI_ON << 8) | MIDI_COLLECTION,
  QK_MIDI_OFF = (MIDI_OFF << 8) | MIDI_COLLECTION,
  QK_MIDI_TOGGLE = (MIDI_TOGGLE << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_C_0 = (MIDI_NOTE_C_0 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_C_SHARP_0 = (MIDI_NOTE_C_SHARP_0 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_D_0 = (MIDI_NOTE_D_0 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_D_SHARP_0 = (MIDI_NOTE_D_SHARP_0 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_E_0 = (MIDI_NOTE_E_0 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_F_0 = (MIDI_NOTE_F_0 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_F_SHARP_0 = (MIDI_NOTE_F_SHARP_0 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_G_0 = (MIDI_NOTE_G_0 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_G_SHARP_0 = (MIDI_NOTE_G_SHARP_0 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_A_0 = (MIDI_NOTE_A_0 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_A_SHARP_0 = (MIDI_NOTE_A_SHARP_0 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_B_0 = (MIDI_NOTE_B_0 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_C_1 = (MIDI_NOTE_C_1 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_C_SHARP_1 = (MIDI_NOTE_C_SHARP_1 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_D_1 = (MIDI_NOTE_D_1 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_D_SHARP_1 = (MIDI_NOTE_D_SHARP_1 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_E_1 = (MIDI_NOTE_E_1 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_F_1 = (MIDI_NOTE_F_1 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_F_SHARP_1 = (MIDI_NOTE_F_SHARP_1 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_G_1 = (MIDI_NOTE_G_1 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_G_SHARP_1 = (MIDI_NOTE_G_SHARP_1 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_A_1 = (MIDI_NOTE_A_1 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_A_SHARP_1 = (MIDI_NOTE_A_SHARP_1 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_B_1 = (MIDI_NOTE_B_1 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_C_2 = (MIDI_NOTE_C_2 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_C_SHARP_2 = (MIDI_NOTE_C_SHARP_2 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_D_2 = (MIDI_NOTE_D_2 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_D_SHARP_2 = (MIDI_NOTE_D_SHARP_2 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_E_2 = (MIDI_NOTE_E_2 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_F_2 = (MIDI_NOTE_F_2 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_F_SHARP_2 = (MIDI_NOTE_F_SHARP_2 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_G_2 = (MIDI_NOTE_G_2 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_G_SHARP_2 = (MIDI_NOTE_G_SHARP_2 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_A_2 = (MIDI_NOTE_A_2 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_A_SHARP_2 = (MIDI_NOTE_A_SHARP_2 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_B_2 = (MIDI_NOTE_B_2 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_C_3 = (MIDI_NOTE_C_3 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_C_SHARP_3 = (MIDI_NOTE_C_SHARP_3 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_D_3 = (MIDI_NOTE_D_3 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_D_SHARP_3 = (MIDI_NOTE_D_SHARP_3 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_E_3 = (MIDI_NOTE_E_3 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_F_3 = (MIDI_NOTE_F_3 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_F_SHARP_3 = (MIDI_NOTE_F_SHARP_3 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_G_3 = (MIDI_NOTE_G_3 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_G_SHARP_3 = (MIDI_NOTE_G_SHARP_3 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_A_3 = (MIDI_NOTE_A_3 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_A_SHARP_3 = (MIDI_NOTE_A_SHARP_3 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_B_3 = (MIDI_NOTE_B_3 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_C_4 = (MIDI_NOTE_C_4 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_C_SHARP_4 = (MIDI_NOTE_C_SHARP_4 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_D_4 = (MIDI_NOTE_D_4 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_D_SHARP_4 = (MIDI_NOTE_D_SHARP_4 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_E_4 = (MIDI_NOTE_E_4 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_F_4 = (MIDI_NOTE_F_4 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_F_SHARP_4 = (MIDI_NOTE_F_SHARP_4 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_G_4 = (MIDI_NOTE_G_4 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_G_SHARP_4 = (MIDI_NOTE_G_SHARP_4 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_A_4 = (MIDI_NOTE_A_4 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_A_SHARP_4 = (MIDI_NOTE_A_SHARP_4 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_B_4 = (MIDI_NOTE_B_4 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_C_5 = (MIDI_NOTE_C_5 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_C_SHARP_5 = (MIDI_NOTE_C_SHARP_5 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_D_5 = (MIDI_NOTE_D_5 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_D_SHARP_5 = (MIDI_NOTE_D_SHARP_5 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_E_5 = (MIDI_NOTE_E_5 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_F_5 = (MIDI_NOTE_F_5 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_F_SHARP_5 = (MIDI_NOTE_F_SHARP_5 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_G_5 = (MIDI_NOTE_G_5 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_G_SHARP_5 = (MIDI_NOTE_G_SHARP_5 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_A_5 = (MIDI_NOTE_A_5 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_A_SHARP_5 = (MIDI_NOTE_A_SHARP_5 << 8) | MIDI_COLLECTION,
  QK_MIDI_NOTE_B_5 = (MIDI_NOTE_B_5 << 8) | MIDI_COLLECTION,
  QK_MIDI_OCTAVE_N2 = (MIDI_OCTAVE_N2 << 8) | MIDI_COLLECTION,
  QK_MIDI_OCTAVE_N1 = (MIDI_OCTAVE_N1 << 8) | MIDI_COLLECTION,
  QK_MIDI_OCTAVE_0 = (MIDI_OCTAVE_0 << 8) | MIDI_COLLECTION,
  QK_MIDI_OCTAVE_1 = (MIDI_OCTAVE_1 << 8) | MIDI_COLLECTION,
  QK_MIDI_OCTAVE_2 = (MIDI_OCTAVE_2 << 8) | MIDI_COLLECTION,
  QK_MIDI_OCTAVE_3 = (MIDI_OCTAVE_3 << 8) | MIDI_COLLECTION,
  QK_MIDI_OCTAVE_4 = (MIDI_OCTAVE_4 << 8) | MIDI_COLLECTION,
  QK_MIDI_OCTAVE_5 = (MIDI_OCTAVE_5 << 8) | MIDI_COLLECTION,
  QK_MIDI_OCTAVE_6 = (MIDI_OCTAVE_6 << 8) | MIDI_COLLECTION,
  QK_MIDI_OCTAVE_7 = (MIDI_OCTAVE_7 << 8) | MIDI_COLLECTION,
  QK_MIDI_OCTAVE_DOWN = (MIDI_OCTAVE_DOWN << 8) | MIDI_COLLECTION,
  QK_MIDI_OCTAVE_UP = (MIDI_OCTAVE_UP << 8) | MIDI_COLLECTION,
  QK_MIDI_TRANSPOSE_N6 = (MIDI_TRANSPOSE_N6 << 8) | MIDI_COLLECTION,
  QK_MIDI_TRANSPOSE_N5 = (MIDI_TRANSPOSE_N5 << 8) | MIDI_COLLECTION,
  QK_MIDI_TRANSPOSE_N4 = (MIDI_TRANSPOSE_N4 << 8) | MIDI_COLLECTION,
  QK_MIDI_TRANSPOSE_N3 = (MIDI_TRANSPOSE_N3 << 8) | MIDI_COLLECTION,
  QK_MIDI_TRANSPOSE_N2 = (MIDI_TRANSPOSE_N2 << 8) | MIDI_COLLECTION,
  QK_MIDI_TRANSPOSE_N1 = (MIDI_TRANSPOSE_N1 << 8) | MIDI_COLLECTION,
  QK_MIDI_TRANSPOSE_0 = (MIDI_TRANSPOSE_0 << 8) | MIDI_COLLECTION,
  QK_MIDI_TRANSPOSE_1 = (MIDI_TRANSPOSE_1 << 8) | MIDI_COLLECTION,
  QK_MIDI_TRANSPOSE_2 = (MIDI_TRANSPOSE_2 << 8) | MIDI_COLLECTION,
  QK_MIDI_TRANSPOSE_3 = (MIDI_TRANSPOSE_3 << 8) | MIDI_COLLECTION,
  QK_MIDI_TRANSPOSE_4 = (MIDI_TRANSPOSE_4 << 8) | MIDI_COLLECTION,
  QK_MIDI_TRANSPOSE_5 = (MIDI_TRANSPOSE_5 << 8) | MIDI_COLLECTION,
  QK_MIDI_TRANSPOSE_6 = (MIDI_TRANSPOSE_6 << 8) | MIDI_COLLECTION,
  QK_MIDI_TRANSPOSE_DOWN = (MIDI_TRANSPOSE_DOWN << 8) | MIDI_COLLECTION,
  QK_MIDI_TRANSPOSE_UP = (MIDI_TRANSPOSE_UP << 8) | MIDI_COLLECTION,
  QK_MIDI_VELOCITY_0 = (MIDI_VELOCITY_0 << 8) | MIDI_COLLECTION,
  QK_MIDI_VELOCITY_1 = (MIDI_VELOCITY_1 << 8) | MIDI_COLLECTION,
  QK_MIDI_VELOCITY_2 = (MIDI_VELOCITY_2 << 8) | MIDI_COLLECTION,
  QK_MIDI_VELOCITY_3 = (MIDI_VELOCITY_3 << 8) | MIDI_COLLECTION,
  QK_MIDI_VELOCITY_4 = (MIDI_VELOCITY_4 << 8) | MIDI_COLLECTION,
  QK_MIDI_VELOCITY_5 = (MIDI_VELOCITY_5 << 8) | MIDI_COLLECTION,
  QK_MIDI_VELOCITY_6 = (MIDI_VELOCITY_6 << 8) | MIDI_COLLECTION,
  QK_MIDI_VELOCITY_7 = (MIDI_VELOCITY_7 << 8) | MIDI_COLLECTION,
  QK_MIDI_VELOCITY_8 = (MIDI_VELOCITY_8 << 8) | MIDI_COLLECTION,
  QK_MIDI_VELOCITY_9 = (MIDI_VELOCITY_9 << 8) | MIDI_COLLECTION,
  QK_MIDI_VELOCITY_10 = (MIDI_VELOCITY_10 << 8) | MIDI_COLLECTION,
  QK_MIDI_VELOCITY_DOWN = (MIDI_VELOCITY_DOWN << 8) | MIDI_COLLECTION,
  QK_MIDI_VELOCITY_UP = (MIDI_VELOCITY_UP << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_1 = (MIDI_CHANNEL_1 << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_2 = (MIDI_CHANNEL_2 << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_3 = (MIDI_CHANNEL_3 << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_4 = (MIDI_CHANNEL_4 << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_5 = (MIDI_CHANNEL_5 << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_6 = (MIDI_CHANNEL_6 << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_7 = (MIDI_CHANNEL_7 << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_8 = (MIDI_CHANNEL_8 << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_9 = (MIDI_CHANNEL_9 << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_10 = (MIDI_CHANNEL_10 << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_11 = (MIDI_CHANNEL_11 << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_12 = (MIDI_CHANNEL_12 << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_13 = (MIDI_CHANNEL_13 << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_14 = (MIDI_CHANNEL_14 << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_15 = (MIDI_CHANNEL_15 << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_16 = (MIDI_CHANNEL_16 << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_DOWN = (MIDI_CHANNEL_DOWN << 8) | MIDI_COLLECTION,
  QK_MIDI_CHANNEL_UP = (MIDI_CHANNEL_UP << 8) | MIDI_COLLECTION,
  QK_MIDI_ALL_NOTES_OFF = (MIDI_ALL_NOTES_OFF << 8) | MIDI_COLLECTION,
  QK_MIDI_SUSTAIN = (MIDI_SUSTAIN << 8) | MIDI_COLLECTION,
  QK_MIDI_PORTAMENTO = (MIDI_PORTAMENTO << 8) | MIDI_COLLECTION,
  QK_MIDI_SOSTENUTO = (MIDI_SOSTENUTO << 8) | MIDI_COLLECTION,
  QK_MIDI_SOFT = (MIDI_SOFT << 8) | MIDI_COLLECTION,
  QK_MIDI_LEGATO = (MIDI_LEGATO << 8) | MIDI_COLLECTION,
  QK_MIDI_MODULATION = (MIDI_MODULATION << 8) | MIDI_COLLECTION,
  QK_MIDI_MODULATION_SPEED_DOWN = (MIDI_MODULATION_SPEED_DOWN << 8) | MIDI_COLLECTION,
  QK_MIDI_MODULATION_SPEED_UP = (MIDI_MODULATION_SPEED_UP << 8) | MIDI_COLLECTION,
  QK_MIDI_PITCH_BEND_DOWN = (MIDI_PITCH_BEND_DOWN << 8) | MIDI_COLLECTION,
  QK_MIDI_PITCH_BEND_UP = (MIDI_PITCH_BEND_UP << 8) | MIDI_COLLECTION,
  QK_SEQUENCER_ON = KEY_NO_EVENT,
  QK_SEQUENCER_OFF = KEY_NO_EVENT,
  QK_SEQUENCER_TOGGLE = KEY_NO_EVENT,
  QK_SEQUENCER_TEMPO_DOWN = KEY_NO_EVENT,
  QK_SEQUENCER_TEMPO_UP = KEY_NO_EVENT,
  QK_SEQUENCER_RESOLUTION_DOWN = KEY_NO_EVENT,
  QK_SEQUENCER_RESOLUTION_UP = KEY_NO_EVENT,
  QK_SEQUENCER_STEPS_ALL = KEY_NO_EVENT,
  QK_SEQUENCER_STEPS_CLEAR = KEY_NO_EVENT,
  QK_JOYSTICK_BUTTON_0 = (0x00 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_1 = (0x01 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_2 = (0x02 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_3 = (0x03 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_4 = (0x04 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_5 = (0x05 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_6 = (0x06 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_7 = (0x07 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_8 = (0x08 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_9 = (0x09 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_10 = (0x0A << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_11 = (0x0B << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_12 = (0x0C << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_13 = (0x0D << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_14 = (0x0E << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_15 = (0x0F << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_16 = (0x10 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_17 = (0x11 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_18 = (0x12 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_19 = (0x13 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_20 = (0x14 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_21 = (0x15 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_22 = (0x16 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_23 = (0x17 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_24 = (0x18 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_25 = (0x19 << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_26 = (0x1A << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_27 = (0x1B << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_28 = (0x1C << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_29 = (0x1D << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_30 = (0x1E << 8) | JOYSTICK_COLLECTION,
  QK_JOYSTICK_BUTTON_31 = (0x1F << 8) | JOYSTICK_COLLECTION,
  QK_PROGRAMMABLE_BUTTON_1 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_2 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_3 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_4 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_5 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_6 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_7 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_8 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_9 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_10 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_11 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_12 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_13 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_14 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_15 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_16 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_17 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_18 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_19 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_20 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_21 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_22 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_23 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_24 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_25 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_26 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_27 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_28 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_29 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_30 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_31 = KEY_NO_EVENT,
  QK_PROGRAMMABLE_BUTTON_32 = KEY_NO_EVENT,
  QK_AUDIO_ON = KEY_NO_EVENT,
  QK_AUDIO_OFF = KEY_NO_EVENT,
  QK_AUDIO_TOGGLE = KEY_NO_EVENT,
  QK_AUDIO_CLICKY_TOGGLE = KEY_NO_EVENT,
  QK_AUDIO_CLICKY_ON = KEY_NO_EVENT,
  QK_AUDIO_CLICKY_OFF = KEY_NO_EVENT,
  QK_AUDIO_CLICKY_UP = KEY_NO_EVENT,
  QK_AUDIO_CLICKY_DOWN = KEY_NO_EVENT,
  QK_AUDIO_CLICKY_RESET = KEY_NO_EVENT,
  QK_MUSIC_ON = KEY_NO_EVENT,
  QK_MUSIC_OFF = KEY_NO_EVENT,
  QK_MUSIC_TOGGLE = KEY_NO_EVENT,
  QK_MUSIC_MODE_NEXT = KEY_NO_EVENT,
  QK_AUDIO_VOICE_NEXT = KEY_NO_EVENT,
  QK_AUDIO_VOICE_PREVIOUS = KEY_NO_EVENT,
  QK_STENO_BOLT = KEY_NO_EVENT,
  QK_STENO_GEMINI = KEY_NO_EVENT,
  QK_STENO_COMB = KEY_NO_EVENT,
  QK_STENO_COMB_MAX = KEY_NO_EVENT,
  QK_MACRO_0 = KEY_NO_EVENT,
  QK_MACRO_1 = KEY_NO_EVENT,
  QK_MACRO_2 = KEY_NO_EVENT,
  QK_MACRO_3 = KEY_NO_EVENT,
  QK_MACRO_4 = KEY_NO_EVENT,
  QK_MACRO_5 = KEY_NO_EVENT,
  QK_MACRO_6 = KEY_NO_EVENT,
  QK_MACRO_7 = KEY_NO_EVENT,
  QK_MACRO_8 = KEY_NO_EVENT,
  QK_MACRO_9 = KEY_NO_EVENT,
  QK_MACRO_10 = KEY_NO_EVENT,
  QK_MACRO_11 = KEY_NO_EVENT,
  QK_MACRO_12 = KEY_NO_EVENT,
  QK_MACRO_13 = KEY_NO_EVENT,
  QK_MACRO_14 = KEY_NO_EVENT,
  QK_MACRO_15 = KEY_NO_EVENT,
  QK_MACRO_16 = KEY_NO_EVENT,
  QK_MACRO_17 = KEY_NO_EVENT,
  QK_MACRO_18 = KEY_NO_EVENT,
  QK_MACRO_19 = KEY_NO_EVENT,
  QK_MACRO_20 = KEY_NO_EVENT,
  QK_MACRO_21 = KEY_NO_EVENT,
  QK_MACRO_22 = KEY_NO_EVENT,
  QK_MACRO_23 = KEY_NO_EVENT,
  QK_MACRO_24 = KEY_NO_EVENT,
  QK_MACRO_25 = KEY_NO_EVENT,
  QK_MACRO_26 = KEY_NO_EVENT,
  QK_MACRO_27 = KEY_NO_EVENT,
  QK_MACRO_28 = KEY_NO_EVENT,
  QK_MACRO_29 = KEY_NO_EVENT,
  QK_MACRO_30 = KEY_NO_EVENT,
  QK_MACRO_31 = KEY_NO_EVENT,
  QK_OUTPUT_AUTO = KEY_NO_EVENT,
  QK_OUTPUT_NEXT = KEY_NO_EVENT,
  QK_OUTPUT_PREV = KEY_NO_EVENT,
  QK_OUTPUT_NONE = KEY_NO_EVENT,
  QK_OUTPUT_USB = KEY_NO_EVENT,
  QK_OUTPUT_2P4GHZ = KEY_NO_EVENT,
  QK_OUTPUT_BLUETOOTH = KEY_NO_EVENT,
  QK_BLUETOOTH_PROFILE_NEXT = KEY_NO_EVENT,
  QK_BLUETOOTH_PROFILE_PREV = KEY_NO_EVENT,
  QK_BLUETOOTH_UNPAIR = KEY_NO_EVENT,
  QK_BLUETOOTH_PROFILE1 = KEY_NO_EVENT,
  QK_BLUETOOTH_PROFILE2 = KEY_NO_EVENT,
  QK_BLUETOOTH_PROFILE3 = KEY_NO_EVENT,
  QK_BLUETOOTH_PROFILE4 = KEY_NO_EVENT,
  QK_BLUETOOTH_PROFILE5 = KEY_NO_EVENT,
  QK_BACKLIGHT_ON = KEY_NO_EVENT,
  QK_BACKLIGHT_OFF = KEY_NO_EVENT,
  QK_BACKLIGHT_TOGGLE = KEY_NO_EVENT,
  QK_BACKLIGHT_DOWN = KEY_NO_EVENT,
  QK_BACKLIGHT_UP = KEY_NO_EVENT,
  QK_BACKLIGHT_STEP = KEY_NO_EVENT,
  QK_BACKLIGHT_TOGGLE_BREATHING = KEY_NO_EVENT,
  QK_LED_MATRIX_ON = KEY_NO_EVENT,
  QK_LED_MATRIX_OFF = KEY_NO_EVENT,
  QK_LED_MATRIX_TOGGLE = KEY_NO_EVENT,
  QK_LED_MATRIX_MODE_NEXT = KEY_NO_EVENT,
  QK_LED_MATRIX_MODE_PREVIOUS = KEY_NO_EVENT,
  QK_LED_MATRIX_BRIGHTNESS_UP = KEY_NO_EVENT,
  QK_LED_MATRIX_BRIGHTNESS_DOWN = KEY_NO_EVENT,
  QK_LED_MATRIX_SPEED_UP = KEY_NO_EVENT,
  QK_LED_MATRIX_SPEED_DOWN = KEY_NO_EVENT,
  QK_UNDERGLOW_TOGGLE = KEY_NO_EVENT,
  QK_UNDERGLOW_MODE_NEXT = KEY_NO_EVENT,
  QK_UNDERGLOW_MODE_PREVIOUS = KEY_NO_EVENT,
  QK_UNDERGLOW_HUE_UP = KEY_NO_EVENT,
  QK_UNDERGLOW_HUE_DOWN = KEY_NO_EVENT,
  QK_UNDERGLOW_SATURATION_UP = KEY_NO_EVENT,
  QK_UNDERGLOW_SATURATION_DOWN = KEY_NO_EVENT,
  QK_UNDERGLOW_VALUE_UP = KEY_NO_EVENT,
  QK_UNDERGLOW_VALUE_DOWN = KEY_NO_EVENT,
  QK_UNDERGLOW_SPEED_UP = KEY_NO_EVENT,
  QK_UNDERGLOW_SPEED_DOWN = KEY_NO_EVENT,
  RGB_MODE_PLAIN = KEY_NO_EVENT,
  RGB_MODE_BREATHE = KEY_NO_EVENT,
  RGB_MODE_RAINBOW = KEY_NO_EVENT,
  RGB_MODE_SWIRL = KEY_NO_EVENT,
  RGB_MODE_SNAKE = KEY_NO_EVENT,
  RGB_MODE_KNIGHT = KEY_NO_EVENT,
  RGB_MODE_XMAS = KEY_NO_EVENT,
  RGB_MODE_GRADIENT = KEY_NO_EVENT,
  RGB_MODE_RGBTEST = KEY_NO_EVENT,
  RGB_MODE_TWINKLE = KEY_NO_EVENT,
  QK_RGB_MATRIX_ON = KEY_NO_EVENT,
  QK_RGB_MATRIX_OFF = KEY_NO_EVENT,
  QK_RGB_MATRIX_TOGGLE = KEY_NO_EVENT,
  QK_RGB_MATRIX_MODE_NEXT = KEY_NO_EVENT,
  QK_RGB_MATRIX_MODE_PREVIOUS = KEY_NO_EVENT,
  QK_RGB_MATRIX_HUE_UP = KEY_NO_EVENT,
  QK_RGB_MATRIX_HUE_DOWN = KEY_NO_EVENT,
  QK_RGB_MATRIX_SATURATION_UP = KEY_NO_EVENT,
  QK_RGB_MATRIX_SATURATION_DOWN = KEY_NO_EVENT,
  QK_RGB_MATRIX_VALUE_UP = KEY_NO_EVENT,
  QK_RGB_MATRIX_VALUE_DOWN = KEY_NO_EVENT,
  QK_RGB_MATRIX_SPEED_UP = KEY_NO_EVENT,
  QK_RGB_MATRIX_SPEED_DOWN = KEY_NO_EVENT,
  QK_BOOTLOADER = (KEYBOARD_BOOTLOADER << 8) | KEYBOARD_OPERATION,
  QK_REBOOT = (KEYBOARD_REBOOT << 8) | KEYBOARD_OPERATION,
  QK_DEBUG_TOGGLE = (KEYBOARD_DEBUG_TOGGLE << 8) | KEYBOARD_OPERATION,
  QK_CLEAR_EEPROM = KEY_NO_EVENT,
  QK_MAKE = KEY_NO_EVENT,
  QK_AUTO_SHIFT_DOWN = KEY_NO_EVENT,
  QK_AUTO_SHIFT_UP = KEY_NO_EVENT,
  QK_AUTO_SHIFT_REPORT = KEY_NO_EVENT,
  QK_AUTO_SHIFT_ON = KEY_NO_EVENT,
  QK_AUTO_SHIFT_OFF = KEY_NO_EVENT,
  QK_AUTO_SHIFT_TOGGLE = KEY_NO_EVENT,
  QK_GRAVE_ESCAPE = KEY_NO_EVENT,
  QK_VELOCIKEY_TOGGLE = KEY_NO_EVENT,
  QK_SPACE_CADET_LEFT_CTRL_PARENTHESIS_OPEN = KEY_NO_EVENT,
  QK_SPACE_CADET_RIGHT_CTRL_PARENTHESIS_CLOSE = KEY_NO_EVENT,
  QK_SPACE_CADET_LEFT_SHIFT_PARENTHESIS_OPEN = KEY_NO_EVENT,
  QK_SPACE_CADET_RIGHT_SHIFT_PARENTHESIS_CLOSE = KEY_NO_EVENT,
  QK_SPACE_CADET_LEFT_ALT_PARENTHESIS_OPEN = KEY_NO_EVENT,
  QK_SPACE_CADET_RIGHT_ALT_PARENTHESIS_CLOSE = KEY_NO_EVENT,
  QK_SPACE_CADET_RIGHT_SHIFT_ENTER = KEY_NO_EVENT,
  QK_UNICODE_MODE_NEXT = KEY_NO_EVENT,
  QK_UNICODE_MODE_PREVIOUS = KEY_NO_EVENT,
  QK_UNICODE_MODE_MACOS = KEY_NO_EVENT,
  QK_UNICODE_MODE_LINUX = KEY_NO_EVENT,
  QK_UNICODE_MODE_WINDOWS = KEY_NO_EVENT,
  QK_UNICODE_MODE_BSD = KEY_NO_EVENT,
  QK_UNICODE_MODE_WINCOMPOSE = KEY_NO_EVENT,
  QK_UNICODE_MODE_EMACS = KEY_NO_EVENT,
  QK_HAPTIC_ON = KEY_NO_EVENT,
  QK_HAPTIC_OFF = KEY_NO_EVENT,
  QK_HAPTIC_TOGGLE = KEY_NO_EVENT,
  QK_HAPTIC_RESET = KEY_NO_EVENT,
  QK_HAPTIC_FEEDBACK_TOGGLE = KEY_NO_EVENT,
  QK_HAPTIC_BUZZ_TOGGLE = KEY_NO_EVENT,
  QK_HAPTIC_MODE_NEXT = KEY_NO_EVENT,
  QK_HAPTIC_MODE_PREVIOUS = KEY_NO_EVENT,
  QK_HAPTIC_CONTINUOUS_TOGGLE = KEY_NO_EVENT,
  QK_HAPTIC_CONTINUOUS_UP = KEY_NO_EVENT,
  QK_HAPTIC_CONTINUOUS_DOWN = KEY_NO_EVENT,
  QK_HAPTIC_DWELL_UP = KEY_NO_EVENT,
  QK_HAPTIC_DWELL_DOWN = KEY_NO_EVENT,
  QK_COMBO_ON = KEY_NO_EVENT,
  QK_COMBO_OFF = KEY_NO_EVENT,
  QK_COMBO_TOGGLE = KEY_NO_EVENT,
  QK_DYNAMIC_MACRO_RECORD_START_1 = KEY_NO_EVENT,
  QK_DYNAMIC_MACRO_RECORD_START_2 = KEY_NO_EVENT,
  QK_DYNAMIC_MACRO_RECORD_STOP = KEY_NO_EVENT,
  QK_DYNAMIC_MACRO_PLAY_1 = KEY_NO_EVENT,
  QK_DYNAMIC_MACRO_PLAY_2 = KEY_NO_EVENT,
  QK_LEADER = KEY_NO_EVENT,
  QK_LOCK = KEY_NO_EVENT,
  QK_ONE_SHOT_ON = KEY_NO_EVENT,
  QK_ONE_SHOT_OFF = KEY_NO_EVENT,
  QK_ONE_SHOT_TOGGLE = KEY_NO_EVENT,
  QK_KEY_OVERRIDE_TOGGLE = KEY_NO_EVENT,
  QK_KEY_OVERRIDE_ON = KEY_NO_EVENT,
  QK_KEY_OVERRIDE_OFF = KEY_NO_EVENT,
  QK_SECURE_LOCK = KEY_NO_EVENT,
  QK_SECURE_UNLOCK = KEY_NO_EVENT,
  QK_SECURE_TOGGLE = KEY_NO_EVENT,
  QK_SECURE_REQUEST = KEY_NO_EVENT,
  QK_DYNAMIC_TAPPING_TERM_PRINT = KEY_NO_EVENT,
  QK_DYNAMIC_TAPPING_TERM_UP = KEY_NO_EVENT,
  QK_DYNAMIC_TAPPING_TERM_DOWN = KEY_NO_EVENT,
  QK_CAPS_WORD_TOGGLE = KEY_NO_EVENT,
  QK_AUTOCORRECT_ON = KEY_NO_EVENT,
  QK_AUTOCORRECT_OFF = KEY_NO_EVENT,
  QK_AUTOCORRECT_TOGGLE = KEY_NO_EVENT,
  QK_TRI_LAYER_LOWER = KEY_NO_EVENT,
  QK_TRI_LAYER_UPPER = KEY_NO_EVENT,
  QK_REPEAT_KEY = KEY_NO_EVENT,
  QK_ALT_REPEAT_KEY = KEY_NO_EVENT,
  QK_LAYER_LOCK = KEY_NO_EVENT,
  QK_KB_0 = KEY_NO_EVENT,
  QK_KB_1 = KEY_NO_EVENT,
  QK_KB_2 = KEY_NO_EVENT,
  QK_KB_3 = KEY_NO_EVENT,
  QK_KB_4 = KEY_NO_EVENT,
  QK_KB_5 = KEY_NO_EVENT,
  QK_KB_6 = KEY_NO_EVENT,
  QK_KB_7 = KEY_NO_EVENT,
  QK_KB_8 = KEY_NO_EVENT,
  QK_KB_9 = KEY_NO_EVENT,
  QK_KB_10 = KEY_NO_EVENT,
  QK_KB_11 = KEY_NO_EVENT,
  QK_KB_12 = KEY_NO_EVENT,
  QK_KB_13 = KEY_NO_EVENT,
  QK_KB_14 = KEY_NO_EVENT,
  QK_KB_15 = KEY_NO_EVENT,
  QK_KB_16 = KEY_NO_EVENT,
  QK_KB_17 = KEY_NO_EVENT,
  QK_KB_18 = KEY_NO_EVENT,
  QK_KB_19 = KEY_NO_EVENT,
  QK_KB_20 = KEY_NO_EVENT,
  QK_KB_21 = KEY_NO_EVENT,
  QK_KB_22 = KEY_NO_EVENT,
  QK_KB_23 = KEY_NO_EVENT,
  QK_KB_24 = KEY_NO_EVENT,
  QK_KB_25 = KEY_NO_EVENT,
  QK_KB_26 = KEY_NO_EVENT,
  QK_KB_27 = KEY_NO_EVENT,
  QK_KB_28 = KEY_NO_EVENT,
  QK_KB_29 = KEY_NO_EVENT,
  QK_KB_30 = KEY_NO_EVENT,
  QK_KB_31 = KEY_NO_EVENT,
  QK_USER_0 = KEY_NO_EVENT,
  QK_USER_1 = KEY_NO_EVENT,
  QK_USER_2 = KEY_NO_EVENT,
  QK_USER_3 = KEY_NO_EVENT,
  QK_USER_4 = KEY_NO_EVENT,
  QK_USER_5 = KEY_NO_EVENT,
  QK_USER_6 = KEY_NO_EVENT,
  QK_USER_7 = KEY_NO_EVENT,
  QK_USER_8 = KEY_NO_EVENT,
  QK_USER_9 = KEY_NO_EVENT,
  QK_USER_10 = KEY_NO_EVENT,
  QK_USER_11 = KEY_NO_EVENT,
  QK_USER_12 = KEY_NO_EVENT,
  QK_USER_13 = KEY_NO_EVENT,
  QK_USER_14 = KEY_NO_EVENT,
  QK_USER_15 = KEY_NO_EVENT,
  QK_USER_16 = KEY_NO_EVENT,
  QK_USER_17 = KEY_NO_EVENT,
  QK_USER_18 = KEY_NO_EVENT,
  QK_USER_19 = KEY_NO_EVENT,
  QK_USER_20 = KEY_NO_EVENT,
  QK_USER_21 = KEY_NO_EVENT,
  QK_USER_22 = KEY_NO_EVENT,
  QK_USER_23 = KEY_NO_EVENT,
  QK_USER_24 = KEY_NO_EVENT,
  QK_USER_25 = KEY_NO_EVENT,
  QK_USER_26 = KEY_NO_EVENT,
  QK_USER_27 = KEY_NO_EVENT,
  QK_USER_28 = KEY_NO_EVENT,
  QK_USER_29 = KEY_NO_EVENT,
  QK_USER_30 = KEY_NO_EVENT,
  QK_USER_31 = KEY_NO_EVENT,
// Alias
  XXXXXXX    = KC_NO,
  _______    = KC_TRANSPARENT,
  KC_TRNS    = KC_TRANSPARENT,
  KC_ENT     = KC_ENTER,
  KC_ESC     = KC_ESCAPE,
  KC_BSPC    = KC_BACKSPACE,
  KC_SPC     = KC_SPACE,
  KC_MINS    = KC_MINUS,
  KC_EQL     = KC_EQUAL,
  KC_LBRC    = KC_LEFT_BRACKET,
  KC_RBRC    = KC_RIGHT_BRACKET,
  KC_BSLS    = KC_BACKSLASH,
  KC_NUHS    = KC_NONUS_HASH,
  KC_SCLN    = KC_SEMICOLON,
  KC_QUOT    = KC_QUOTE,
  KC_GRV     = KC_GRAVE,
  KC_COMM    = KC_COMMA,
  KC_SLSH    = KC_SLASH,
  KC_CAPS    = KC_CAPS_LOCK,
  KC_PSCR    = KC_PRINT_SCREEN,
  KC_SCRL    = KC_SCROLL_LOCK,
  KC_BRMD    = KC_SCROLL_LOCK,
  KC_PAUS    = KC_PAUSE,
  KC_BRK     = KC_PAUSE,
  KC_BRMU    = KC_PAUSE,
  KC_INS     = KC_INSERT,
  KC_PGUP    = KC_PAGE_UP,
  KC_DEL     = KC_DELETE,
  KC_PGDN    = KC_PAGE_DOWN,
  KC_RGHT    = KC_RIGHT,
  KC_NUM     = KC_NUM_LOCK,
  KC_PSLS    = KC_KP_SLASH,
  KC_PAST    = KC_KP_ASTERISK,
  KC_PMNS    = KC_KP_MINUS,
  KC_PPLS    = KC_KP_PLUS,
  KC_PENT    = KC_KP_ENTER,
  KC_P1      = KC_KP_1,
  KC_P2      = KC_KP_2,
  KC_P3      = KC_KP_3,
  KC_P4      = KC_KP_4,
  KC_P5      = KC_KP_5,
  KC_P6      = KC_KP_6,
  KC_P7      = KC_KP_7,
  KC_P8      = KC_KP_8,
  KC_P9      = KC_KP_9,
  KC_P0      = KC_KP_0,
  KC_PDOT    = KC_KP_DOT,
  KC_NUBS    = KC_NONUS_BACKSLASH,
  KC_APP     = KC_APPLICATION,
  KC_PEQL    = KC_KP_EQUAL,
  KC_EXEC    = KC_EXECUTE,
  KC_SLCT    = KC_SELECT,
  KC_AGIN    = KC_AGAIN,
  KC_PSTE    = KC_PASTE,
  KC_LCAP    = KC_LOCKING_CAPS_LOCK,
  KC_LNUM    = KC_LOCKING_NUM_LOCK,
  KC_LSCR    = KC_LOCKING_SCROLL_LOCK,
  KC_PCMM    = KC_KP_COMMA,
  KC_INT1    = KC_INTERNATIONAL_1,
  KC_INT2    = KC_INTERNATIONAL_2,
  KC_INT3    = KC_INTERNATIONAL_3,
  KC_INT4    = KC_INTERNATIONAL_4,
  KC_INT5    = KC_INTERNATIONAL_5,
  KC_INT6    = KC_INTERNATIONAL_6,
  KC_INT7    = KC_INTERNATIONAL_7,
  KC_INT8    = KC_INTERNATIONAL_8,
  KC_INT9    = KC_INTERNATIONAL_9,
  KC_LNG1    = KC_LANGUAGE_1,
  KC_LNG2    = KC_LANGUAGE_2,
  KC_LNG3    = KC_LANGUAGE_3,
  KC_LNG4    = KC_LANGUAGE_4,
  KC_LNG5    = KC_LANGUAGE_5,
  KC_LNG6    = KC_LANGUAGE_6,
  KC_LNG7    = KC_LANGUAGE_7,
  KC_LNG8    = KC_LANGUAGE_8,
  KC_LNG9    = KC_LANGUAGE_9,
  KC_ERAS    = KC_ALTERNATE_ERASE,
  KC_SYRQ    = KC_SYSTEM_REQUEST,
  KC_CNCL    = KC_CANCEL,
  KC_CLR     = KC_CLEAR,
  KC_PRIR    = KC_PRIOR,
  KC_RETN    = KC_RETURN,
  KC_SEPR    = KC_SEPARATOR,
  KC_CLAG    = KC_CLEAR_AGAIN,
  KC_CRSL    = KC_CRSEL,
  KC_EXSL    = KC_EXSEL,
  KC_PWR     = KC_SYSTEM_POWER,
  KC_SLEP    = KC_SYSTEM_SLEEP,
  KC_WAKE    = KC_SYSTEM_WAKE,
  KC_MUTE    = KC_AUDIO_MUTE,
  KC_VOLU    = KC_AUDIO_VOL_UP,
  KC_VOLD    = KC_AUDIO_VOL_DOWN,
  KC_MNXT    = KC_MEDIA_NEXT_TRACK,
  KC_MPRV    = KC_MEDIA_PREV_TRACK,
  KC_MSTP    = KC_MEDIA_STOP,
  KC_MPLY    = KC_MEDIA_PLAY_PAUSE,
  KC_MSEL    = KC_MEDIA_SELECT,
  KC_EJCT    = KC_MEDIA_EJECT,
  KC_CALC    = KC_CALCULATOR,
  KC_MYCM    = KC_MY_COMPUTER,
  KC_WSCH    = KC_WWW_SEARCH,
  KC_WHOM    = KC_WWW_HOME,
  KC_WBAK    = KC_WWW_BACK,
  KC_WFWD    = KC_WWW_FORWARD,
  KC_WSTP    = KC_WWW_STOP,
  KC_WREF    = KC_WWW_REFRESH,
  KC_WFAV    = KC_WWW_FAVORITES,
  KC_MFFD    = KC_MEDIA_FAST_FORWARD,
  KC_MRWD    = KC_MEDIA_REWIND,
  KC_BRIU    = KC_BRIGHTNESS_UP,
  KC_BRID    = KC_BRIGHTNESS_DOWN,
  KC_CPNL    = KC_CONTROL_PANEL,
  KC_ASST    = KC_ASSISTANT,
  KC_MCTL    = KC_MISSION_CONTROL,
  KC_LPAD    = KC_LAUNCHPAD,
  MS_UP      = QK_MOUSE_CURSOR_UP,
  MS_DOWN    = QK_MOUSE_CURSOR_DOWN,
  MS_LEFT    = QK_MOUSE_CURSOR_LEFT,
  MS_RGHT    = QK_MOUSE_CURSOR_RIGHT,
  MS_BTN1    = QK_MOUSE_BUTTON_1,
  MS_BTN2    = QK_MOUSE_BUTTON_2,
  MS_BTN3    = QK_MOUSE_BUTTON_3,
  MS_BTN4    = QK_MOUSE_BUTTON_4,
  MS_BTN5    = QK_MOUSE_BUTTON_5,
  MS_BTN6    = QK_MOUSE_BUTTON_6,
  MS_BTN7    = QK_MOUSE_BUTTON_7,
  MS_BTN8    = QK_MOUSE_BUTTON_8,
  MS_WHLU    = QK_MOUSE_WHEEL_UP,
  MS_WHLD    = QK_MOUSE_WHEEL_DOWN,
  MS_WHLL    = QK_MOUSE_WHEEL_LEFT,
  MS_WHLR    = QK_MOUSE_WHEEL_RIGHT,
  MS_ACL0    = QK_MOUSE_ACCELERATION_0,
  MS_ACL1    = QK_MOUSE_ACCELERATION_1,
  MS_ACL2    = QK_MOUSE_ACCELERATION_2,
  KC_LCTL    = KC_LEFT_CTRL,
  KC_LSFT    = KC_LEFT_SHIFT,
  KC_LALT    = KC_LEFT_ALT,
  KC_LOPT    = KC_LEFT_ALT,
  KC_LGUI    = KC_LEFT_GUI,
  KC_LCMD    = KC_LEFT_GUI,
  KC_LWIN    = KC_LEFT_GUI,
  KC_RCTL    = KC_RIGHT_CTRL,
  KC_RSFT    = KC_RIGHT_SHIFT,
  KC_RALT    = KC_RIGHT_ALT,
  KC_ROPT    = KC_RIGHT_ALT,
  KC_ALGR    = KC_RIGHT_ALT,
  KC_RGUI    = KC_RIGHT_GUI,
  KC_RCMD    = KC_RIGHT_GUI,
  KC_RWIN    = KC_RIGHT_GUI,
  SH_TOGG    = QK_SWAP_HANDS_TOGGLE,
  SH_TT      = QK_SWAP_HANDS_TAP_TOGGLE,
  SH_MON     = QK_SWAP_HANDS_MOMENTARY_ON,
  SH_MOFF    = QK_SWAP_HANDS_MOMENTARY_OFF,
  SH_OFF     = QK_SWAP_HANDS_OFF,
  SH_ON      = QK_SWAP_HANDS_ON,
  SH_OS      = QK_SWAP_HANDS_ONE_SHOT,
  CL_SWAP    = QK_MAGIC_SWAP_CONTROL_CAPS_LOCK,
  CL_NORM    = QK_MAGIC_UNSWAP_CONTROL_CAPS_LOCK,
  CL_TOGG    = QK_MAGIC_TOGGLE_CONTROL_CAPS_LOCK,
  CL_CAPS    = QK_MAGIC_CAPS_LOCK_AS_CONTROL_OFF,
  CL_CTRL    = QK_MAGIC_CAPS_LOCK_AS_CONTROL_ON,
  AG_LSWP    = QK_MAGIC_SWAP_LALT_LGUI,
  AG_LNRM    = QK_MAGIC_UNSWAP_LALT_LGUI,
  AG_RSWP    = QK_MAGIC_SWAP_RALT_RGUI,
  AG_RNRM    = QK_MAGIC_UNSWAP_RALT_RGUI,
  GU_ON      = QK_MAGIC_GUI_ON,
  GU_OFF     = QK_MAGIC_GUI_OFF,
  GU_TOGG    = QK_MAGIC_TOGGLE_GUI,
  GE_SWAP    = QK_MAGIC_SWAP_GRAVE_ESC,
  GE_NORM    = QK_MAGIC_UNSWAP_GRAVE_ESC,
  BS_SWAP    = QK_MAGIC_SWAP_BACKSLASH_BACKSPACE,
  BS_NORM    = QK_MAGIC_UNSWAP_BACKSLASH_BACKSPACE,
  BS_TOGG    = QK_MAGIC_TOGGLE_BACKSLASH_BACKSPACE,
  NK_ON      = QK_MAGIC_NKRO_ON,
  NK_OFF     = QK_MAGIC_NKRO_OFF,
  NK_TOGG    = QK_MAGIC_TOGGLE_NKRO,
  AG_SWAP    = QK_MAGIC_SWAP_ALT_GUI,
  AG_NORM    = QK_MAGIC_UNSWAP_ALT_GUI,
  AG_TOGG    = QK_MAGIC_TOGGLE_ALT_GUI,
  CG_LSWP    = QK_MAGIC_SWAP_LCTL_LGUI,
  CG_LNRM    = QK_MAGIC_UNSWAP_LCTL_LGUI,
  CG_RSWP    = QK_MAGIC_SWAP_RCTL_RGUI,
  CG_RNRM    = QK_MAGIC_UNSWAP_RCTL_RGUI,
  CG_SWAP    = QK_MAGIC_SWAP_CTL_GUI,
  CG_NORM    = QK_MAGIC_UNSWAP_CTL_GUI,
  CG_TOGG    = QK_MAGIC_TOGGLE_CTL_GUI,
  EH_LEFT    = QK_MAGIC_EE_HANDS_LEFT,
  EH_RGHT    = QK_MAGIC_EE_HANDS_RIGHT,
  EC_SWAP    = QK_MAGIC_SWAP_ESCAPE_CAPS_LOCK,
  EC_NORM    = QK_MAGIC_UNSWAP_ESCAPE_CAPS_LOCK,
  EC_TOGG    = QK_MAGIC_TOGGLE_ESCAPE_CAPS_LOCK,
  MI_ON      = QK_MIDI_ON,
  MI_OFF     = QK_MIDI_OFF,
  MI_TOGG    = QK_MIDI_TOGGLE,
  MI_C       = QK_MIDI_NOTE_C_0,
  MI_Cs      = QK_MIDI_NOTE_C_SHARP_0,
  MI_Db      = QK_MIDI_NOTE_C_SHARP_0,
  MI_D       = QK_MIDI_NOTE_D_0,
  MI_Ds      = QK_MIDI_NOTE_D_SHARP_0,
  MI_Eb      = QK_MIDI_NOTE_D_SHARP_0,
  MI_E       = QK_MIDI_NOTE_E_0,
  MI_F       = QK_MIDI_NOTE_F_0,
  MI_Fs      = QK_MIDI_NOTE_F_SHARP_0,
  MI_Gb      = QK_MIDI_NOTE_F_SHARP_0,
  MI_G       = QK_MIDI_NOTE_G_0,
  MI_Gs      = QK_MIDI_NOTE_G_SHARP_0,
  MI_Ab      = QK_MIDI_NOTE_G_SHARP_0,
  MI_A       = QK_MIDI_NOTE_A_0,
  MI_As      = QK_MIDI_NOTE_A_SHARP_0,
  MI_Bb      = QK_MIDI_NOTE_A_SHARP_0,
  MI_B       = QK_MIDI_NOTE_B_0,
  MI_C1      = QK_MIDI_NOTE_C_1,
  MI_Cs1     = QK_MIDI_NOTE_C_SHARP_1,
  MI_Db1     = QK_MIDI_NOTE_C_SHARP_1,
  MI_D1      = QK_MIDI_NOTE_D_1,
  MI_Ds1     = QK_MIDI_NOTE_D_SHARP_1,
  MI_Eb1     = QK_MIDI_NOTE_D_SHARP_1,
  MI_E1      = QK_MIDI_NOTE_E_1,
  MI_F1      = QK_MIDI_NOTE_F_1,
  MI_Fs1     = QK_MIDI_NOTE_F_SHARP_1,
  MI_Gb1     = QK_MIDI_NOTE_F_SHARP_1,
  MI_G1      = QK_MIDI_NOTE_G_1,
  MI_Gs1     = QK_MIDI_NOTE_G_SHARP_1,
  MI_Ab1     = QK_MIDI_NOTE_G_SHARP_1,
  MI_A1      = QK_MIDI_NOTE_A_1,
  MI_As1     = QK_MIDI_NOTE_A_SHARP_1,
  MI_Bb1     = QK_MIDI_NOTE_A_SHARP_1,
  MI_B1      = QK_MIDI_NOTE_B_1,
  MI_C2      = QK_MIDI_NOTE_C_2,
  MI_Cs2     = QK_MIDI_NOTE_C_SHARP_2,
  MI_Db2     = QK_MIDI_NOTE_C_SHARP_2,
  MI_D2      = QK_MIDI_NOTE_D_2,
  MI_Ds2     = QK_MIDI_NOTE_D_SHARP_2,
  MI_Eb2     = QK_MIDI_NOTE_D_SHARP_2,
  MI_E2      = QK_MIDI_NOTE_E_2,
  MI_F2      = QK_MIDI_NOTE_F_2,
  MI_Fs2     = QK_MIDI_NOTE_F_SHARP_2,
  MI_Gb2     = QK_MIDI_NOTE_F_SHARP_2,
  MI_G2      = QK_MIDI_NOTE_G_2,
  MI_Gs2     = QK_MIDI_NOTE_G_SHARP_2,
  MI_Ab2     = QK_MIDI_NOTE_G_SHARP_2,
  MI_A2      = QK_MIDI_NOTE_A_2,
  MI_As2     = QK_MIDI_NOTE_A_SHARP_2,
  MI_Bb2     = QK_MIDI_NOTE_A_SHARP_2,
  MI_B2      = QK_MIDI_NOTE_B_2,
  MI_C3      = QK_MIDI_NOTE_C_3,
  MI_Cs3     = QK_MIDI_NOTE_C_SHARP_3,
  MI_Db3     = QK_MIDI_NOTE_C_SHARP_3,
  MI_D3      = QK_MIDI_NOTE_D_3,
  MI_Ds3     = QK_MIDI_NOTE_D_SHARP_3,
  MI_Eb3     = QK_MIDI_NOTE_D_SHARP_3,
  MI_E3      = QK_MIDI_NOTE_E_3,
  MI_F3      = QK_MIDI_NOTE_F_3,
  MI_Fs3     = QK_MIDI_NOTE_F_SHARP_3,
  MI_Gb3     = QK_MIDI_NOTE_F_SHARP_3,
  MI_G3      = QK_MIDI_NOTE_G_3,
  MI_Gs3     = QK_MIDI_NOTE_G_SHARP_3,
  MI_Ab3     = QK_MIDI_NOTE_G_SHARP_3,
  MI_A3      = QK_MIDI_NOTE_A_3,
  MI_As3     = QK_MIDI_NOTE_A_SHARP_3,
  MI_Bb3     = QK_MIDI_NOTE_A_SHARP_3,
  MI_B3      = QK_MIDI_NOTE_B_3,
  MI_C4      = QK_MIDI_NOTE_C_4,
  MI_Cs4     = QK_MIDI_NOTE_C_SHARP_4,
  MI_Db4     = QK_MIDI_NOTE_C_SHARP_4,
  MI_D4      = QK_MIDI_NOTE_D_4,
  MI_Ds4     = QK_MIDI_NOTE_D_SHARP_4,
  MI_Eb4     = QK_MIDI_NOTE_D_SHARP_4,
  MI_E4      = QK_MIDI_NOTE_E_4,
  MI_F4      = QK_MIDI_NOTE_F_4,
  MI_Fs4     = QK_MIDI_NOTE_F_SHARP_4,
  MI_Gb4     = QK_MIDI_NOTE_F_SHARP_4,
  MI_G4      = QK_MIDI_NOTE_G_4,
  MI_Gs4     = QK_MIDI_NOTE_G_SHARP_4,
  MI_Ab4     = QK_MIDI_NOTE_G_SHARP_4,
  MI_A4      = QK_MIDI_NOTE_A_4,
  MI_As4     = QK_MIDI_NOTE_A_SHARP_4,
  MI_Bb4     = QK_MIDI_NOTE_A_SHARP_4,
  MI_B4      = QK_MIDI_NOTE_B_4,
  MI_C5      = QK_MIDI_NOTE_C_5,
  MI_Cs5     = QK_MIDI_NOTE_C_SHARP_5,
  MI_Db5     = QK_MIDI_NOTE_C_SHARP_5,
  MI_D5      = QK_MIDI_NOTE_D_5,
  MI_Ds5     = QK_MIDI_NOTE_D_SHARP_5,
  MI_Eb5     = QK_MIDI_NOTE_D_SHARP_5,
  MI_E5      = QK_MIDI_NOTE_E_5,
  MI_F5      = QK_MIDI_NOTE_F_5,
  MI_Fs5     = QK_MIDI_NOTE_F_SHARP_5,
  MI_Gb5     = QK_MIDI_NOTE_F_SHARP_5,
  MI_G5      = QK_MIDI_NOTE_G_5,
  MI_Gs5     = QK_MIDI_NOTE_G_SHARP_5,
  MI_Ab5     = QK_MIDI_NOTE_G_SHARP_5,
  MI_A5      = QK_MIDI_NOTE_A_5,
  MI_As5     = QK_MIDI_NOTE_A_SHARP_5,
  MI_Bb5     = QK_MIDI_NOTE_A_SHARP_5,
  MI_B5      = QK_MIDI_NOTE_B_5,
  MI_OCN2    = QK_MIDI_OCTAVE_N2,
  MI_OCN1    = QK_MIDI_OCTAVE_N1,
  MI_OC0     = QK_MIDI_OCTAVE_0,
  MI_OC1     = QK_MIDI_OCTAVE_1,
  MI_OC2     = QK_MIDI_OCTAVE_2,
  MI_OC3     = QK_MIDI_OCTAVE_3,
  MI_OC4     = QK_MIDI_OCTAVE_4,
  MI_OC5     = QK_MIDI_OCTAVE_5,
  MI_OC6     = QK_MIDI_OCTAVE_6,
  MI_OC7     = QK_MIDI_OCTAVE_7,
  MI_OCTD    = QK_MIDI_OCTAVE_DOWN,
  MI_OCTU    = QK_MIDI_OCTAVE_UP,
  MI_TRN6    = QK_MIDI_TRANSPOSE_N6,
  MI_TRN5    = QK_MIDI_TRANSPOSE_N5,
  MI_TRN4    = QK_MIDI_TRANSPOSE_N4,
  MI_TRN3    = QK_MIDI_TRANSPOSE_N3,
  MI_TRN2    = QK_MIDI_TRANSPOSE_N2,
  MI_TRN1    = QK_MIDI_TRANSPOSE_N1,
  MI_TR0     = QK_MIDI_TRANSPOSE_0,
  MI_TR1     = QK_MIDI_TRANSPOSE_1,
  MI_TR2     = QK_MIDI_TRANSPOSE_2,
  MI_TR3     = QK_MIDI_TRANSPOSE_3,
  MI_TR4     = QK_MIDI_TRANSPOSE_4,
  MI_TR5     = QK_MIDI_TRANSPOSE_5,
  MI_TR6     = QK_MIDI_TRANSPOSE_6,
  MI_TRSD    = QK_MIDI_TRANSPOSE_DOWN,
  MI_TRSU    = QK_MIDI_TRANSPOSE_UP,
  MI_VL0     = QK_MIDI_VELOCITY_0,
  MI_VL1     = QK_MIDI_VELOCITY_1,
  MI_VL2     = QK_MIDI_VELOCITY_2,
  MI_VL3     = QK_MIDI_VELOCITY_3,
  MI_VL4     = QK_MIDI_VELOCITY_4,
  MI_VL5     = QK_MIDI_VELOCITY_5,
  MI_VL6     = QK_MIDI_VELOCITY_6,
  MI_VL7     = QK_MIDI_VELOCITY_7,
  MI_VL8     = QK_MIDI_VELOCITY_8,
  MI_VL9     = QK_MIDI_VELOCITY_9,
  MI_VL10    = QK_MIDI_VELOCITY_10,
  MI_VELD    = QK_MIDI_VELOCITY_DOWN,
  MI_VELU    = QK_MIDI_VELOCITY_UP,
  MI_CH1     = QK_MIDI_CHANNEL_1,
  MI_CH2     = QK_MIDI_CHANNEL_2,
  MI_CH3     = QK_MIDI_CHANNEL_3,
  MI_CH4     = QK_MIDI_CHANNEL_4,
  MI_CH5     = QK_MIDI_CHANNEL_5,
  MI_CH6     = QK_MIDI_CHANNEL_6,
  MI_CH7     = QK_MIDI_CHANNEL_7,
  MI_CH8     = QK_MIDI_CHANNEL_8,
  MI_CH9     = QK_MIDI_CHANNEL_9,
  MI_CH10    = QK_MIDI_CHANNEL_10,
  MI_CH11    = QK_MIDI_CHANNEL_11,
  MI_CH12    = QK_MIDI_CHANNEL_12,
  MI_CH13    = QK_MIDI_CHANNEL_13,
  MI_CH14    = QK_MIDI_CHANNEL_14,
  MI_CH15    = QK_MIDI_CHANNEL_15,
  MI_CH16    = QK_MIDI_CHANNEL_16,
  MI_CHND    = QK_MIDI_CHANNEL_DOWN,
  MI_CHNU    = QK_MIDI_CHANNEL_UP,
  MI_AOFF    = QK_MIDI_ALL_NOTES_OFF,
  MI_SUST    = QK_MIDI_SUSTAIN,
  MI_PORT    = QK_MIDI_PORTAMENTO,
  MI_SOST    = QK_MIDI_SOSTENUTO,
  MI_SOFT    = QK_MIDI_SOFT,
  MI_LEG     = QK_MIDI_LEGATO,
  MI_MOD     = QK_MIDI_MODULATION,
  MI_MODD    = QK_MIDI_MODULATION_SPEED_DOWN,
  MI_MODU    = QK_MIDI_MODULATION_SPEED_UP,
  MI_BNDD    = QK_MIDI_PITCH_BEND_DOWN,
  MI_BNDU    = QK_MIDI_PITCH_BEND_UP,
  SQ_ON      = QK_SEQUENCER_ON,
  SQ_OFF     = QK_SEQUENCER_OFF,
  SQ_TOGG    = QK_SEQUENCER_TOGGLE,
  SQ_TMPD    = QK_SEQUENCER_TEMPO_DOWN,
  SQ_TMPU    = QK_SEQUENCER_TEMPO_UP,
  SQ_RESD    = QK_SEQUENCER_RESOLUTION_DOWN,
  SQ_RESU    = QK_SEQUENCER_RESOLUTION_UP,
  SQ_SALL    = QK_SEQUENCER_STEPS_ALL,
  SQ_SCLR    = QK_SEQUENCER_STEPS_CLEAR,
  JS_0       = QK_JOYSTICK_BUTTON_0,
  JS_1       = QK_JOYSTICK_BUTTON_1,
  JS_2       = QK_JOYSTICK_BUTTON_2,
  JS_3       = QK_JOYSTICK_BUTTON_3,
  JS_4       = QK_JOYSTICK_BUTTON_4,
  JS_5       = QK_JOYSTICK_BUTTON_5,
  JS_6       = QK_JOYSTICK_BUTTON_6,
  JS_7       = QK_JOYSTICK_BUTTON_7,
  JS_8       = QK_JOYSTICK_BUTTON_8,
  JS_9       = QK_JOYSTICK_BUTTON_9,
  JS_10      = QK_JOYSTICK_BUTTON_10,
  JS_11      = QK_JOYSTICK_BUTTON_11,
  JS_12      = QK_JOYSTICK_BUTTON_12,
  JS_13      = QK_JOYSTICK_BUTTON_13,
  JS_14      = QK_JOYSTICK_BUTTON_14,
  JS_15      = QK_JOYSTICK_BUTTON_15,
  JS_16      = QK_JOYSTICK_BUTTON_16,
  JS_17      = QK_JOYSTICK_BUTTON_17,
  JS_18      = QK_JOYSTICK_BUTTON_18,
  JS_19      = QK_JOYSTICK_BUTTON_19,
  JS_20      = QK_JOYSTICK_BUTTON_20,
  JS_21      = QK_JOYSTICK_BUTTON_21,
  JS_22      = QK_JOYSTICK_BUTTON_22,
  JS_23      = QK_JOYSTICK_BUTTON_23,
  JS_24      = QK_JOYSTICK_BUTTON_24,
  JS_25      = QK_JOYSTICK_BUTTON_25,
  JS_26      = QK_JOYSTICK_BUTTON_26,
  JS_27      = QK_JOYSTICK_BUTTON_27,
  JS_28      = QK_JOYSTICK_BUTTON_28,
  JS_29      = QK_JOYSTICK_BUTTON_29,
  JS_30      = QK_JOYSTICK_BUTTON_30,
  JS_31      = QK_JOYSTICK_BUTTON_31,
  PB_1       = QK_PROGRAMMABLE_BUTTON_1,
  PB_2       = QK_PROGRAMMABLE_BUTTON_2,
  PB_3       = QK_PROGRAMMABLE_BUTTON_3,
  PB_4       = QK_PROGRAMMABLE_BUTTON_4,
  PB_5       = QK_PROGRAMMABLE_BUTTON_5,
  PB_6       = QK_PROGRAMMABLE_BUTTON_6,
  PB_7       = QK_PROGRAMMABLE_BUTTON_7,
  PB_8       = QK_PROGRAMMABLE_BUTTON_8,
  PB_9       = QK_PROGRAMMABLE_BUTTON_9,
  PB_10      = QK_PROGRAMMABLE_BUTTON_10,
  PB_11      = QK_PROGRAMMABLE_BUTTON_11,
  PB_12      = QK_PROGRAMMABLE_BUTTON_12,
  PB_13      = QK_PROGRAMMABLE_BUTTON_13,
  PB_14      = QK_PROGRAMMABLE_BUTTON_14,
  PB_15      = QK_PROGRAMMABLE_BUTTON_15,
  PB_16      = QK_PROGRAMMABLE_BUTTON_16,
  PB_17      = QK_PROGRAMMABLE_BUTTON_17,
  PB_18      = QK_PROGRAMMABLE_BUTTON_18,
  PB_19      = QK_PROGRAMMABLE_BUTTON_19,
  PB_20      = QK_PROGRAMMABLE_BUTTON_20,
  PB_21      = QK_PROGRAMMABLE_BUTTON_21,
  PB_22      = QK_PROGRAMMABLE_BUTTON_22,
  PB_23      = QK_PROGRAMMABLE_BUTTON_23,
  PB_24      = QK_PROGRAMMABLE_BUTTON_24,
  PB_25      = QK_PROGRAMMABLE_BUTTON_25,
  PB_26      = QK_PROGRAMMABLE_BUTTON_26,
  PB_27      = QK_PROGRAMMABLE_BUTTON_27,
  PB_28      = QK_PROGRAMMABLE_BUTTON_28,
  PB_29      = QK_PROGRAMMABLE_BUTTON_29,
  PB_30      = QK_PROGRAMMABLE_BUTTON_30,
  PB_31      = QK_PROGRAMMABLE_BUTTON_31,
  PB_32      = QK_PROGRAMMABLE_BUTTON_32,
  AU_ON      = QK_AUDIO_ON,
  AU_OFF     = QK_AUDIO_OFF,
  AU_TOGG    = QK_AUDIO_TOGGLE,
  CK_TOGG    = QK_AUDIO_CLICKY_TOGGLE,
  CK_ON      = QK_AUDIO_CLICKY_ON,
  CK_OFF     = QK_AUDIO_CLICKY_OFF,
  CK_UP      = QK_AUDIO_CLICKY_UP,
  CK_DOWN    = QK_AUDIO_CLICKY_DOWN,
  CK_RST     = QK_AUDIO_CLICKY_RESET,
  MU_ON      = QK_MUSIC_ON,
  MU_OFF     = QK_MUSIC_OFF,
  MU_TOGG    = QK_MUSIC_TOGGLE,
  MU_NEXT    = QK_MUSIC_MODE_NEXT,
  AU_NEXT    = QK_AUDIO_VOICE_NEXT,
  AU_PREV    = QK_AUDIO_VOICE_PREVIOUS,
  MC_0       = QK_MACRO_0,
  MC_1       = QK_MACRO_1,
  MC_2       = QK_MACRO_2,
  MC_3       = QK_MACRO_3,
  MC_4       = QK_MACRO_4,
  MC_5       = QK_MACRO_5,
  MC_6       = QK_MACRO_6,
  MC_7       = QK_MACRO_7,
  MC_8       = QK_MACRO_8,
  MC_9       = QK_MACRO_9,
  MC_10      = QK_MACRO_10,
  MC_11      = QK_MACRO_11,
  MC_12      = QK_MACRO_12,
  MC_13      = QK_MACRO_13,
  MC_14      = QK_MACRO_14,
  MC_15      = QK_MACRO_15,
  MC_16      = QK_MACRO_16,
  MC_17      = QK_MACRO_17,
  MC_18      = QK_MACRO_18,
  MC_19      = QK_MACRO_19,
  MC_20      = QK_MACRO_20,
  MC_21      = QK_MACRO_21,
  MC_22      = QK_MACRO_22,
  MC_23      = QK_MACRO_23,
  MC_24      = QK_MACRO_24,
  MC_25      = QK_MACRO_25,
  MC_26      = QK_MACRO_26,
  MC_27      = QK_MACRO_27,
  MC_28      = QK_MACRO_28,
  MC_29      = QK_MACRO_29,
  MC_30      = QK_MACRO_30,
  MC_31      = QK_MACRO_31,
  OU_AUTO    = QK_OUTPUT_AUTO,
  OU_NEXT    = QK_OUTPUT_NEXT,
  OU_PREV    = QK_OUTPUT_PREV,
  OU_NONE    = QK_OUTPUT_NONE,
  OU_USB     = QK_OUTPUT_USB,
  OU_2P4G    = QK_OUTPUT_2P4GHZ,
  OU_BT      = QK_OUTPUT_BLUETOOTH,
  BT_NEXT    = QK_BLUETOOTH_PROFILE_NEXT,
  BT_PREV    = QK_BLUETOOTH_PROFILE_PREV,
  BT_UNPR    = QK_BLUETOOTH_UNPAIR,
  BT_PRF1    = QK_BLUETOOTH_PROFILE1,
  BT_PRF2    = QK_BLUETOOTH_PROFILE2,
  BT_PRF3    = QK_BLUETOOTH_PROFILE3,
  BT_PRF4    = QK_BLUETOOTH_PROFILE4,
  BT_PRF5    = QK_BLUETOOTH_PROFILE5,
  BL_ON      = QK_BACKLIGHT_ON,
  BL_OFF     = QK_BACKLIGHT_OFF,
  BL_TOGG    = QK_BACKLIGHT_TOGGLE,
  BL_DOWN    = QK_BACKLIGHT_DOWN,
  BL_UP      = QK_BACKLIGHT_UP,
  BL_STEP    = QK_BACKLIGHT_STEP,
  BL_BRTG    = QK_BACKLIGHT_TOGGLE_BREATHING,
  LM_ON      = QK_LED_MATRIX_ON,
  LM_OFF     = QK_LED_MATRIX_OFF,
  LM_TOGG    = QK_LED_MATRIX_TOGGLE,
  LM_NEXT    = QK_LED_MATRIX_MODE_NEXT,
  LM_PREV    = QK_LED_MATRIX_MODE_PREVIOUS,
  LM_BRIU    = QK_LED_MATRIX_BRIGHTNESS_UP,
  LM_BRID    = QK_LED_MATRIX_BRIGHTNESS_DOWN,
  LM_SPDU    = QK_LED_MATRIX_SPEED_UP,
  LM_SPDD    = QK_LED_MATRIX_SPEED_DOWN,
  UG_TOGG    = QK_UNDERGLOW_TOGGLE,
  UG_NEXT    = QK_UNDERGLOW_MODE_NEXT,
  UG_PREV    = QK_UNDERGLOW_MODE_PREVIOUS,
  UG_HUEU    = QK_UNDERGLOW_HUE_UP,
  UG_HUED    = QK_UNDERGLOW_HUE_DOWN,
  UG_SATU    = QK_UNDERGLOW_SATURATION_UP,
  UG_SATD    = QK_UNDERGLOW_SATURATION_DOWN,
  UG_VALU    = QK_UNDERGLOW_VALUE_UP,
  UG_VALD    = QK_UNDERGLOW_VALUE_DOWN,
  UG_SPDU    = QK_UNDERGLOW_SPEED_UP,
  UG_SPDD    = QK_UNDERGLOW_SPEED_DOWN,
  RGB_M_P    = RGB_MODE_PLAIN,
  RGB_M_B    = RGB_MODE_BREATHE,
  RGB_M_R    = RGB_MODE_RAINBOW,
  RGB_M_SW   = RGB_MODE_SWIRL,
  RGB_M_SN   = RGB_MODE_SNAKE,
  RGB_M_K    = RGB_MODE_KNIGHT,
  RGB_M_X    = RGB_MODE_XMAS,
  RGB_M_G    = RGB_MODE_GRADIENT,
  RGB_M_T    = RGB_MODE_RGBTEST,
  RGB_M_TW   = RGB_MODE_TWINKLE,
  RM_ON      = QK_RGB_MATRIX_ON,
  RM_OFF     = QK_RGB_MATRIX_OFF,
  RM_TOGG    = QK_RGB_MATRIX_TOGGLE,
  RM_NEXT    = QK_RGB_MATRIX_MODE_NEXT,
  RM_PREV    = QK_RGB_MATRIX_MODE_PREVIOUS,
  RM_HUEU    = QK_RGB_MATRIX_HUE_UP,
  RM_HUED    = QK_RGB_MATRIX_HUE_DOWN,
  RM_SATU    = QK_RGB_MATRIX_SATURATION_UP,
  RM_SATD    = QK_RGB_MATRIX_SATURATION_DOWN,
  RM_VALU    = QK_RGB_MATRIX_VALUE_UP,
  RM_VALD    = QK_RGB_MATRIX_VALUE_DOWN,
  RM_SPDU    = QK_RGB_MATRIX_SPEED_UP,
  RM_SPDD    = QK_RGB_MATRIX_SPEED_DOWN,
  QK_BOOT    = QK_BOOTLOADER,
  QK_RBT     = QK_REBOOT,
  DB_TOGG    = QK_DEBUG_TOGGLE,
  EE_CLR     = QK_CLEAR_EEPROM,
  AS_DOWN    = QK_AUTO_SHIFT_DOWN,
  AS_UP      = QK_AUTO_SHIFT_UP,
  AS_RPT     = QK_AUTO_SHIFT_REPORT,
  AS_ON      = QK_AUTO_SHIFT_ON,
  AS_OFF     = QK_AUTO_SHIFT_OFF,
  AS_TOGG    = QK_AUTO_SHIFT_TOGGLE,
  QK_GESC    = QK_GRAVE_ESCAPE,
  VK_TOGG    = QK_VELOCIKEY_TOGGLE,
  SC_LCPO    = QK_SPACE_CADET_LEFT_CTRL_PARENTHESIS_OPEN,
  SC_RCPC    = QK_SPACE_CADET_RIGHT_CTRL_PARENTHESIS_CLOSE,
  SC_LSPO    = QK_SPACE_CADET_LEFT_SHIFT_PARENTHESIS_OPEN,
  SC_RSPC    = QK_SPACE_CADET_RIGHT_SHIFT_PARENTHESIS_CLOSE,
  SC_LAPO    = QK_SPACE_CADET_LEFT_ALT_PARENTHESIS_OPEN,
  SC_RAPC    = QK_SPACE_CADET_RIGHT_ALT_PARENTHESIS_CLOSE,
  SC_SENT    = QK_SPACE_CADET_RIGHT_SHIFT_ENTER,
  UC_NEXT    = QK_UNICODE_MODE_NEXT,
  UC_PREV    = QK_UNICODE_MODE_PREVIOUS,
  UC_MAC     = QK_UNICODE_MODE_MACOS,
  UC_LINX    = QK_UNICODE_MODE_LINUX,
  UC_WIN     = QK_UNICODE_MODE_WINDOWS,
  UC_BSD     = QK_UNICODE_MODE_BSD,
  UC_WINC    = QK_UNICODE_MODE_WINCOMPOSE,
  UC_EMAC    = QK_UNICODE_MODE_EMACS,
  HF_ON      = QK_HAPTIC_ON,
  HF_OFF     = QK_HAPTIC_OFF,
  HF_TOGG    = QK_HAPTIC_TOGGLE,
  HF_RST     = QK_HAPTIC_RESET,
  HF_FDBK    = QK_HAPTIC_FEEDBACK_TOGGLE,
  HF_BUZZ    = QK_HAPTIC_BUZZ_TOGGLE,
  HF_NEXT    = QK_HAPTIC_MODE_NEXT,
  HF_PREV    = QK_HAPTIC_MODE_PREVIOUS,
  HF_CONT    = QK_HAPTIC_CONTINUOUS_TOGGLE,
  HF_CONU    = QK_HAPTIC_CONTINUOUS_UP,
  HF_COND    = QK_HAPTIC_CONTINUOUS_DOWN,
  HF_DWLU    = QK_HAPTIC_DWELL_UP,
  HF_DWLD    = QK_HAPTIC_DWELL_DOWN,
  CM_ON      = QK_COMBO_ON,
  CM_OFF     = QK_COMBO_OFF,
  CM_TOGG    = QK_COMBO_TOGGLE,
  DM_REC1    = QK_DYNAMIC_MACRO_RECORD_START_1,
  DM_REC2    = QK_DYNAMIC_MACRO_RECORD_START_2,
  DM_RSTP    = QK_DYNAMIC_MACRO_RECORD_STOP,
  DM_PLY1    = QK_DYNAMIC_MACRO_PLAY_1,
  DM_PLY2    = QK_DYNAMIC_MACRO_PLAY_2,
  QK_LEAD    = QK_LEADER,
  OS_ON      = QK_ONE_SHOT_ON,
  OS_OFF     = QK_ONE_SHOT_OFF,
  OS_TOGG    = QK_ONE_SHOT_TOGGLE,
  KO_TOGG    = QK_KEY_OVERRIDE_TOGGLE,
  KO_ON      = QK_KEY_OVERRIDE_ON,
  KO_OFF     = QK_KEY_OVERRIDE_OFF,
  SE_LOCK    = QK_SECURE_LOCK,
  SE_UNLK    = QK_SECURE_UNLOCK,
  SE_TOGG    = QK_SECURE_TOGGLE,
  SE_REQ     = QK_SECURE_REQUEST,
  DT_PRNT    = QK_DYNAMIC_TAPPING_TERM_PRINT,
  DT_UP      = QK_DYNAMIC_TAPPING_TERM_UP,
  DT_DOWN    = QK_DYNAMIC_TAPPING_TERM_DOWN,
  CW_TOGG    = QK_CAPS_WORD_TOGGLE,
  AC_ON      = QK_AUTOCORRECT_ON,
  AC_OFF     = QK_AUTOCORRECT_OFF,
  AC_TOGG    = QK_AUTOCORRECT_TOGGLE,
  TL_LOWR    = QK_TRI_LAYER_LOWER,
  TL_UPPR    = QK_TRI_LAYER_UPPER,
  QK_REP     = QK_REPEAT_KEY,
  QK_AREP    = QK_ALT_REPEAT_KEY,
  QK_LLCK    = QK_LAYER_LOCK,
};
  

#endif /* KEYCODE_H_ */
